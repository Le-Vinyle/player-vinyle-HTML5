<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20(in%20HTML)_fichiers/2009.css" title="main" media="screen" type="text/css"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<script type="text/javascript" async="" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/ga.js"></script><script type="text/javascript">
/*
   [                                                       ]
   [ SCHILLMANIA! | 2009 edition                           ]
   [ ----------------------------------------------------- ]
   [                                             200902xx  ]
   [ APPROACH
   [                                                       ]
   [ Khoi Vinh + TheRoot42 + others as design inspiration. ]
   [ Less is more. The grid is good. That is all.          ]
   [                                                       ]
   [ ABOOT                                                 ]
   [                                                       ]
   [ Name:        Scott Schiller                           ]
   [ Background:  Canadian                                 ]
   [ Live/Work:   San Francisco | Flickr/Yahoo!            ]
   [ Email:       i'd like to work at yahoo.com            ]
*/
var APP_XHTML = true; // Apparently your agent supports application/xhtml+xml
var urlRoot = '/';
</script>
<title>The Wheels Of Steel: An Ode To Turntables (in HTML)</title>
<meta name="description" content="Building a browser-based turntable prototype using HTML, CSS, JavaScript and Flash: A bit of history, screenshots, explanation of the approach taken, limitations found and sample code." />
<meta name="keywords" content="web DJing, online turntables, html5, css3, javascript sound, flash as3 pitch, sample, vinyl, record, wheels of steel, soundmanager 2, externalinterface" /><meta name="robots" content="all" />
<meta name="author" content="Scott Schiller" />
<meta name="copyright" content="Copyright (C) 1997 onwards Scott Schiller" />
<meta name="language" content="en-us" />
<!-- base href="http://www.schillmania.com/" -->
<link rel="alternate" type="application/rss+xml" href="http://www.schillmania.com/content/schillmania_rss.xml" title="RSS feed for Schillmania.com" />
<link rel="shortcut icon" href="http://schillmania.com/favicon.ico" />
<script type="text/javascript" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/yui.js"></script>
<script type="text/javascript" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/2009.js"></script>
<script type="text/javascript" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/stats.js"></script>
<script src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/re_.js"></script><script src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/photos_public.js"></script><script type="text/javascript" async="true" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/re_.js"></script></head>

<body id="body" class="video_ok">

<div id="site">

<div id="content">

 <div id="container">

  <div id="header">

   <div id="header-content">

    <div id="logo">
     <a href="http://www.schillmania.com/" title="The creative and technical vents of Scott Schiller" style="background: url(&quot;/2009/image/header-jaggies.png&quot;) repeat-x scroll -22px -23px rgb(255, 255, 255); color: rgb(0, 0, 0);">Schillmania!</a>
    </div>

    <div id="theme-archive">
	 <div id="site-archives">
	  <a href="http://www.schillmania.com/?theme=2004" title="View the 2004 'now with more funk' theme">04</a>
	  <a href="http://www.schillmania.com/?theme=2005" title="View the 2005 'bouncing icons' theme">05</a>
	  <a href="http://www.schillmania.com/?theme=2006" title="View the 2006 'work/life balance' theme">06</a>
	  <a href="http://www.schillmania.com/?theme=2007" title="View the 2007/08 'night/day' theme">07/08</a>
	  <a href="http://www.schillmania.com/?theme=2008" title="View the 08 'back to basics' theme">08</a>
	  <a href="#theme=2009" title="2009 (current) theme" class="current">09</a>
	 </div>
    </div>

   </div>

   <hr />
  
  </div>

<!--
  <div id="lights"> </div>
-->

  <!-- dynamic content -->

  <div id="main-content">
	
   <div id="entry-content">


  <div class="top header"><h1>The Wheels Of Steel: An Ode To Turntables (in HTML)</h1><div class="divider"> </div></div>

  <div class="copy">

<p class="header-comment">TL;DR version: I made some shiny. Turntables in your browser. <a href="http://wheelsofsteel.net/" title="The Wheels Of Steel: Browser-based DJ/turntable prototype. Play and mix music using HTML, CSS, JavaScript and Flash">wheelsofsteel.net</a>. Safari 5 or Chrome 12 on OS X is best.</p>

<p>The turntable is more than just a <em>hi-fi</em> music player for the
 home. To the DJ, it's also a creative tool for remixing music in 
real-time. The turntable gave birth to a culture of disc jockeys and is 
an important element of hip-hop; it also plays a role, quite literally, 
in the evolution of electronic music.</p>

<div style="position:relative;width:100%;max-width:65em;margin-bottom:0.75em;overflow:hidden">
 <img width="100%" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5776603357_2275352c33_z.jpg" alt="Turntable rig, May 2011" style="margin-top: -17%;" />
 <p class="header-comment"><a href="http://www.flickr.com/photos/schill/5776603357/in/set-72157626808348290/" title="Turntable rig, May 2011 by .schill, on Flickr">The turntable rig, May 2011</a>: Two Technics 1200s and a RANE TTM-54 mixer sit atop a repurposed speaker box.</p>
</div>

<p>Turntables have had many nicknames given to them by DJs including <em>1200s</em>, <em>the 1s and 2s</em>, and <em>T-turns</em> among others. The famous 1981 DJ set, <em>The Adventures of Grandmaster Flash on the Wheels Of Steel</em>, highlights the significance of turntables in DJing and hip-hop. Flash's work is considered to be an early example of <em>Turntablism</em>, the use of turntables as an instrument.</p>

<h2 id="end-of-an-era">Technics SL-1200: 1972 - 2010 (The End Of An Era?)</h2>

<div style="float:right;display:inline;width:50%;max-width:240px;margin-left:2em">
 <a href="http://www.flickr.com/photos/schill/5777122952/" title="The turntable rig, May 2011 by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="100%" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5777122952_0e61323ff8.jpg" alt="The turntable rig, May 2011" /></a>
 <p class="header-comment" style="margin-top:0.5em">A partial view of the vinyl collection - which might, in fact, weigh a ton.</p>
</div>

<div style="text-align:justify">

<p>In late 2010, Panasonic Corp. (formerly Matsushita) announced that it was <a href="http://en.wikipedia.org/wiki/Technics_1200#Technics_SL-1200_Production_Ceased" title="Wikipedia: Technics SL-1200 Production Ceased">ceasing production</a>
 of the world-famous Technics 1200 series turntable. DJs worldwide 
mourned the news as it spread around online, perhaps with good reason: 
the SL-1200 is <em>the</em> standard for equipment in clubs and bars, 
thanks in part to its tank-like resilience. In the eyes of turntablist 
and "skratch" DJs, the 1200 is also a musical instrument in its own 
right.</p>

<p>Despite the speed at which technology has evolved - particularly in 
audio and video - it's impressive that the 1200 lasted for 38 years as a
 "music player", staying relevant throughout both the 8-track and 
cassette tape eras. Even with the advances of digital audio bringing us 
CDs, MP3s and "internet radio", the turntable and vinyl records are 
still seen as a modern, albeit fading, source of music. New albums 
continue to be released in 12" and LP formats, though the market is 
leaning towards specialty and limited-release production.</p>

<p>As a hobbyist DJ, owner of two SL-1200 M3Ds and a professional 
Front-end Engineer / "HTML Custodian", it seemed appropriate that I 
finally try building a web-based prototype that simulates the real 
thing.</p>

</div>

<h2 id="virtual-turntables">Virtual Turntables: Digital Analogs</h2>

<p>There were a few notable online flash-based "virtual turntables" sites in 1999/2000 ( <a href="http://www.turntables.de/">turntables.de</a>
 is the one I remember), but they may have been limited by the Flash 
version 3 + 4 technology available at the time. Animations were 
simplistic, and there was no real scratching aside from pre-recorded 
loops and samples that could be triggered. Without pitch bending, mixing
 tracks was not really possible. Nonetheless, it was a pretty fun 
experience combining animation and layering of sound within Flash at the
 time.</p>

<p>Software has come a long way since the early 2000s. Desktop DJ 
software packages have grown to be popular, and offer plenty of bells 
and whistles. Numerous desktop programs (and more recently, touch-screen
 apps on the iPad) include virtual turntables in their designs and have 
solved most digital issues including latency and synchronization.</p>

<p>Many professional DJs use computer-plus-turntable hybrids such as 
Serato's "Scratch Live" software in live performances. However, desktop 
and mobile DJ programs remain somewhat of a specialty/niche interest - 
and despite the social effects of music, these applications have yet to 
really tie into the contexts of the internet and social networking.</p>

<h2 id="wheelsofsteel"><a href="http://wheelsofsteel.net/" title="The Wheels Of Steel: Browser-based DJ/turntable prototype. Play and mix music using HTML, CSS, JavaScript and Flash" style="background: none repeat scroll 0% 0% transparent; color: rgb(0, 0, 0);">http://wheelsofsteel.net</a>: Turntables in your browser.<br />HTML (and CSS and JS and sometimes Flash, Oh My!)</h2>

<p style="margin-bottom:0.75em">
 <a href="http://wheelsofsteel.net/" title="The Wheels Of Steel: Browser-based DJ/turntable prototype. Play and mix music using HTML, CSS, JavaScript and Flash" style="background: none repeat scroll 0% 0% transparent;"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/turntable-ui-800.jpg" alt="The Wheels Of Steel (2011): Browser-based DJ/turntable interface using HTML, CSS + JavaScript + Flash" style="width: 100%; max-width: 65em;" /></a>
</p>

<p class="header-comment"><strong>General disclaimer, May 2011</strong>:
 This is an experimental, cutting-edge prototype and has requirements 
similar to some of the "Chrome Experiments" site demos. Safari 5 or 
Chrome 12 are recommended, and OS X has the lowest audio latency. If 
your browser doesn't have hardware acceleration support, the UI will be 
really slow and your CPU will likely catch on fire, among other things. 
Consider yourself warned. ;)</p>

<p>I have been interested in the idea of building a turntable-based UI 
in HTML for years; however, the past presented a number of technical 
hurdles. Setting dreams of browser-based remixing aside, simply 
recreating the core design elements of a turntable was practically 
infeasible until the advent of CSS3. The features most notably missing 
from browsers involved drawing circles, rotation of elements and 
low-level control of audio. As of 2011, it's a pleasure to say that 
these features can be implemented almost entirely using HTML, CSS and 
JavaScript alone.</p>

<p>While some will mistakenly assume this prototype is "made using 
HTML5", it is a technically inaccurate label. The design is largely 
thanks to CSS3 and while a few HTML5 elements are used by the prototype,
 none of them are visible in the UI. The mixer uses some hidden <code>&lt;input type="range"&gt;</code>
 elements for tracking the values of the crossfader, upfader and rotary 
knobs behind the scenes; the same approach applies to the pitch slider 
on the turntables. In the event Flash is not present, HTML5 <code>Audio()</code> may be used by <a href="http://www.schillmania.com/projects/soundmanager2/" title="SoundManager 2: JavaScript Sound API for the web">SoundManager 2</a> for playback of MP3s. Aside from these two elements, the markup is run-of-the-mill (and hopefully, somewhat-semantic) HTML4.</p>

<p>The majority of the "shiny" in the UI is thanks to a mix of standard and developing CSS3 features including <code>border-radius</code>, <code>transform:rotate()</code>
 and transitions. Since a turntable is a combination of circular 
elements that rotate inside a static rectangle, CSS is  well-suited to 
the design.</p>

<p>In terms of JavaScript, the HTML5 <code>Audio()</code> object, <code>querySelector</code>-based methods, <code>localStorage</code> and <code>JSON</code>
 objects are the only "current-generation" features used. Aside from 
these elements, the turntable logic should be entirely functional in 
older browsers. Flash is currently used for the fancier audio features 
including pitch bending, scratching and EQ, but at the time of writing 
(June 2011) there are low-level JavaScript audio APIs being offered both
 by Mozilla and Google which may be able to replace the work Flash is 
doing. The prototype doesn't currently take advantage of these APIs, but
 they are very shiny and I expect they will be implemented at some 
point.</p>

<p>OK - here's where I attempt to break down the thinking behind the implementation. Fair warning, <em>Danger, Will Robinson</em>, here there be dragons etc.</p>

<h3 id="the-markup">The Markup: HTML</h3>

<p>Deciding how to represent a real object in virtual markup is always a
 challenge. My take is that the controls should be presented as links, 
form elements or buttons where possible, and that the remainder of the 
markup is structural and forms the design and layout of the object.</p>

<div>

 <p class="header-comment"><b>&lt;rant&gt;</b></p>

 <p style="margin:-1em 1em 0.5em 1em;font-size:1em;text-align:justify" class="header-comment">As
 all good HTML documents should be information-rich, the UI is marked up
 in "meaningful" HTML as appropriate. Because of this, the page 
gracefully degrades and the core UI + content renders nicely even with 
JavaScript turned off (though since the turntables have no "power", the 
power light will also be off, you can't play music etc.) It should be 
obvious, but blank or illegible pages shown to users without JS is 
something that many so-called "HTML5" websites suffer from these days; 
it reflects poorly on the site developers, and I consider them as 
examples of how <i>not</i> to do it.</p>

 <p class="header-comment"><b>&lt;/rant&gt;</b></p>

</div>

<p>A turntable has controls for power and start/stop, 33/45 RPM speed 
buttons and a pitch slider. These can be marked up as links, inputs and 
buttons. The remainder of the turntable is design and layout; the 
tonearm, platter and record can be interacted with, but only in the 
sense of "drag-and-drop" actions which ultimately change the pitch 
and/or position of the sound.</p>

<p style="margin-bottom:0.75em">
 <img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/turntable-outline.png" alt="The Wheels Of Steel: Render outline (by Kyle Kesterson, Giant Thinkwell)" style="width: 100%; max-width: 640px;" />
</p>

<p class="header-comment">Many thanks to the creative energy of graphic illustrator <a href="http://www.kylekesterson.com/" title="Kyle Kesterson, Seattle-based graphic designer">Kyle Kesterson</a> from <a href="http://giantthinkwell.com/" title="Giant Thinkwell, a TechStars &amp; Startup Weekend Company">Giant Thinkwell</a>, who made the decks 100% sexier.</p>

<p style="margin-bottom:2.5em">From the rendering, we have a number of alpha-transparent PNG assets to work with:</p>

<p style="margin-bottom:0.75em">
 <img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/turntable-elements.jpg" alt="The Wheels Of Steel: Turntable elements rendered by Kyle Kesterson" style="width: 100%; max-width: 640px;" />
</p>

<p style="margin-top:1.5em;margin-bottom:2em">By combining the images 
with some elements rendered in pure HTML + CSS (eg., the pitch slider) 
and giving the turntable body a background color of <code>#30313b</code>, we get a UI like this:</p>

<p style="text-align:center">
 <img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/wheelsofsteel-single-deck-white-bg.png" style="display: block; width: 100%; margin-left: 4%; max-width: 563px; margin-top: 1em;" />
</p>

<p style="margin-bottom:2em">The turntable markup ultimately takes a structure like this (labels indicate class names/roles):</p>

<div style="float:right;display:inline;width:45%;max-width:300px;margin:-1em 0px 2em 0px">
 <img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/wheelsofsteel-record-debug-angled-white-bg.png" style="display: block; width: 100%; max-width: 330px; margin-right: -1em; margin-top: 1em;" />
 <p style="text-align:center;margin-bottom:0px" class="header-comment">Turntable UI (HTML + CSS), "debug" (outline) mode</p>
</div>

<pre class="block" style="float:left;display:inline;margin-right:2em"><code>turntable
 platter
  ring
  record
   record-ui <span><span>&lt;-- graphics + rotation box --&gt;</span></span>
    slipmat  <span><span>&lt;-- eg., "techniques" mat --&gt;</span></span>
    grooves  <span><span>&lt;-- record groove overlay --&gt;</span></span>
    loader   <span><span>&lt;-- "loading progress" shade --&gt;</span></span>
    label    <span><span>&lt;-- white paper circle --&gt;</span></span>
   spindle   <span><span>&lt;-- metal nub --&gt;</span></span>
   shiny     <span><span>&lt;-- light reflections --&gt;</span></span>
   cover     <span><span>&lt;-- captures mouse events --&gt;</span></span>
 powerlight
 tonearm
 pitch
  &lt;input id="<span>pitch-slider</span>" /&gt;
  &lt;ul class="<span>legend</span>"&gt;
   &lt;li&gt;<span>(-8% ... 8%)</span>&lt;/li&gt;
  &lt;/ul&gt;
 powerdial
 &lt;a href="<span>#powerdial</span>"&gt;&lt;/a&gt;
 &lt;a href="<span>#startstop</span>"&gt;&lt;/a&gt;
 &lt;a href="<span>#rpm-33</span>"&gt;&lt;/a&gt;
 &lt;a href="<span>#rpm-45</span>"&gt;&lt;/a&gt;
</code></pre>

<div style="text-align:justify">

 <p>In the turntable case, there is a lot of structural markup to 
provide hooks for the positioning and independent rotation of elements. 
The platter contains a "record", which can have a few items stacked on 
top of it - ie., the slipmat when empty, or a record with album art, 
grooves and so on. The spindle (nested inside the record element) is 
always shown, but the label element in the middle is hidden when no 
record is present, and instead the slipmat is shown. The element swap is
 acheived simply by making a class name change at the top of the 
structure.</p>

 <p>The remaining elements include the tonearm, power light, power dial 
and pitch control. The latter is the only one with any real structure 
including an unordered list and a hidden input; the former are all links
 which are picked up by JavaScript and call methods on the relevant 
turntable object.</p>

</div>

<p style="padding-top:1em;clear:both">The mixer is more rich in the 
semantic sense, since the layout is more columnar and modular; each 
"panel" is a single horizontal slice, containing one or two columns. 
Within each list item is a hidden input that tracks the value of the pot
 (or fader), as well as a non-semantic element for the control itself.</p>

<div style="float:left;display:inline">

<pre class="block"><code>&lt;form id="<span>mixer</span>"&gt;
 panel
  channel 1
   &lt;ul class="<span>pots</span>"&gt;
    &lt;li&gt;&lt;input id="<span>tt-1-gain</span>" /&gt;&lt;/li&gt;
   &lt;/ul&gt;
   channel 2
   &lt;ul class="<span>pots</span>"&gt;
    &lt;li&gt;&lt;input id="<span>tt-2-gain</span>" /&gt;&lt;/li&gt;
   &lt;/ul&gt;
 panel
  channel 1
   &lt;ul class="<span>pots</span>"&gt;
    &lt;li&gt;&lt;input id="<span>tt-1-eq-1</span>" /&gt;&lt;/li&gt;
    &lt;li&gt;&lt;input id="<span>tt-1-eq-2</span>" /&gt;&lt;/li&gt;
    &lt;li&gt;&lt;input id="<span>tt-1-eq-3</span>" /&gt;&lt;/li&gt;
   &lt;/ul&gt;
  channel 2
   &lt;ul class="<span>pots</span>"&gt;
    &lt;li&gt;&lt;input id="<span>tt-2-eq-1</span>" /&gt;&lt;/li&gt;
    &lt;li&gt;&lt;input id="<span>tt-2-eq-2</span>" /&gt;&lt;/li&gt;
    &lt;li&gt;&lt;input id="<span>tt-2-eq-3</span>" /&gt;&lt;/li&gt;
   &lt;/ul&gt;
 panel
  channel 1
   upfader
    &lt;input id="<span>tt-1-upfader</span>" /&gt;
  channel 2
   upfader
    &lt;input id="<span>tt-2-upfader</span>" /&gt;
 panel
  crossfader
   &lt;input id="<span>control-xfader</span>" /&gt;
&lt;/form&gt;	
</code></pre>

</div>

<div style="float:left;display:inline;margin-top:-1em;margin-left:2em;width:50%;text-align:justify">
  <img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/mixer-1.png" style="width: 50%; max-width: 149px; margin-right: 0.5em;" />
  <img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/mixer-2-outline.png" style="width: 50%; max-width: 149px; margin-top: 2em;" />
  <p style="margin-top:1.5em">As each of these inputs is a <code>type="range"</code>, they could be (and in fact, were) used functionally "as-is" during earlier prototyping.</p>
  <p>Given the design, it didn't make sense to try to re-style the 
inputs, but they remain intact in the markup and are used to set and 
track the values of the controls. (A fun aside: The vertical fader 
elements have <code>transform:rotate(-90deg)</code> applied.) You can see the underlying input elements if you enable debug mode in the UI.</p>
  <p>The rotary, potentiometer-style controls are block-level elements made circular via <code>border-radius</code>.
 JavaScript hooks into these elements' relevant mouse events in order to
 handle click and drag actions, meanwhile updating the values of the 
hidden input elements beneath.</p>
</div>

<h3 id="css" style="padding-top:1em">CSS</h3>

<p>The styling of the decks and mixer is fairly straightforward in terms of structure, including liberal use of <code>border-radius</code> and rotation of a few key elements - namely the platter, record and tonearm containers.</p>

<p>An amount of strategic element nesting and absolute + relative 
positioning trickery goes into making the UI functional with the 
interactions between tonearm, platter, slipmat, record and album art 
that come into play. Where logical, elements to be rotated are nested 
together; the platter "ring" and record UI elements are the two circular
 items that rotate independently of each other.</p>

<div style="float:right;display:inline;width:50%;max-width:300px">
 <p>
  <img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/turntable-cuepoints-1-scaled.jpg" style="display: inline-block; max-width: 300px;" />
 </p>
 <p>
  <img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/turntable-cuepoints-2-scaled.jpg" style="display: inline-block; max-width: 300px;" />
 </p>
</div>

<pre class="block"><code>.turntable .platter .record .record-ui {
<span><span> /*
  * circular things that sit on the platter
  * including .slipmat + .cover + .label
  */</span></span>
 position: <span>absolute;</span>
 left: <span>0px;</span>
 top: <span>0px;</span>
 width: <span>100%;</span>
 height: <span>100%;</span>
 background: <span>transparent no-repeat 50% 50%;</span>
 <span><span>/* large circle size */</span></span>
 background-size: <span>384px 384px;</span>
 border-radius: <span>384px;</span>
}

.turntable .record .cuepoint .tape {
<span><span> /*
  * "pieces of tape" that mark cue points
  * on the record (bookmarking time)
  */</span></span>
 position: <span>absolute;</span>
 left: <span>50%;</span>
 top: <span>50%;</span>
 margin: <span>0px;</span> <span><span>/* reset */</span></span>
 <span><span>/* width: how far out (set via JS)... */</span></span>
 <span><span>/* how wide.. */</span></span>
 border-right: <span>8px solid rgba(255,255,255,0.65);</span>
 height: <span>16px;</span> <span><span>/* and how tall. */</span></span>
}</code></pre>

<p style="padding-top:1em">The turntable tonearm, platter, record and elements inside the record are then rotated using <code>transform:rotate()</code>
 with the angle set via JavaScript, which is where most of the rendering
 work is done. (More on this later, regarding hardware acceleration and 
CPU use.) While they appear stacked, the record and underlying platter 
can rotate relative to one another, allowing for things like record 
"slipperiness", back-cueing and scratching.</p>

<h4 id="look-ma-no-images">Look Ma, no images!</h4>

<img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/turntable-pitch-slider-detail-scaled.jpg" alt="Turntable pitch slider, CSS-only (no images)" style="float: right; display: inline; padding-left: 2em;" />

<p>Certain elements of the UI were created without the use of <code>&lt;img /&gt;</code>
 (or external background images) and instead use text, CSS borders, 
background colors, gradients and shading to fill in the details. In the 
case of the pitch slider control, the HTML is an unordered list of 
numbers ranging from -8 to +8, and using the ■ character for the little 
"box" that shows up next to each number. A few positioning and 
line-height tricks made the text line up nicely with the desired target 
height of the box, matching the numbers to the actual pitch being 
applied.</p>

<img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/turntable-pitch-slider-zoom.png" alt="Turntable pitch slider knob, CSS-only (gradients, background colors, borders etc., no images)" style="float: right; display: inline; padding: 0px 1em 1em 2em;" />

<p>Creating the slider knob was an interesting challenge in testing and 
tweaking of alpha-transparent CSS gradients, spacing and borders; I'm 
still not sure I got it quite right, but I think it's close enough that 
the shadows correctly suggest the "sloped" style of the knob with the 
flat-ish top, and a notch in the middle. Sometimes it looks correct, 
other times I think my brain fools itself into thinking it just looks 
like a flat, albeit warped button. The mixer's up-fader controls use a 
similar gradient, but they are more wide and round and don't seem to 
have this visual discrepancy.</p>

<p>The current mixer design is entirely CSS-based; the only "external" image is a base64-encoded <code>data:</code> URI-based "line" on the rotary knobs. The rest is boxes, borders and native CSS gradients.</p>

<h4 id="record-details">Record details: Grooves, texture, highlights</h4>

<img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/record-composite.jpg" alt="Record composite image: Underlying 'fuzz', grooves and highlight layers" style="float: right; display: inline; padding: 0px 1em 1em 2em;" />

<p>A virtual turntable UI simply isn't convincing if it misses some of 
the stuff a real one has; a record should have a slightly-glossy look, 
the appearance of concentric rings (or at least, a pattern of fine 
circles), and upon inspection, some sort of texture to the actual vinyl 
itself. As it turns out, image editing programs' "polar coordinates", 
gaussian noise filters and blur tools come in quite handy for these 
things.</p>

<p>There's nothing terribly special here, but there are a few layers in 
effect. Underlying everything is the slipmat, which is a single graphic 
showing the "Techniques" text. Substituting this for other slipmat 
images is easy, and fun; I even downloaded a few product shots of real 
slipmats and threw them on during development, and they worked 
wonderfully.</p>

<p>In making your standard 12" record, the base layer is simply gaussian
 noise reduced to greyscale with some extra contrast applied. Sitting 
atop the noise is the grooves layer, concentric 4x4-pixel circles 
rendered as a circle via "polar coordinates" filter. The highlights sit 
on top of everything else and are mirrored white triangles rotated 45 
degrees, stretched and blurred with alpha transparency at the edges.</p>

<p>The detail is lost in the record thumbnail as shown here since it's a
 lossy .JPG, but the full-size thing has grooves visible when zoomed in.</p>

<h3 id="javascript">JavaScript</h3>

<pre class="block" style="float:right;display:inline;margin-left:2em;margin-top:0.5em"><code>function Turntable(<span>ttID</span>) {
	
  <span><span>// pseudo-turntable structure</span></span>

  this.dom = {
    <span><span>// references to key HTML elements</span></span>
    o: <span>document.getElementById(ttID)</span>,
    tonearm: <span>null</span>,
    platter: <span>null</span>,
    power: <span>null</span>
  };

  this.data = {
    <span><span>// internal state, DOM cache etc.</span></span>
    tonearm: {
      offsetLeft: <span>0</span>,
      offsetTop: <span>0</span>,
      offsetWidth: <span>0</span>,
      offsetHeight: <span>0</span>
    },
    platter: {
      angle: <span>0</span>,
      locked: <span>false</span>,
      rpm: <span>0</span>,
      velocity: <span>0</span>,
      ...
    },
    record: {
      angle: <span>0</span>,
      cuePoints: <span>[]</span>,
      dragging: <span>false</span>,
      velocity: <span>0</span>
    },
    sound: {
      gain: <span>1</span>,
      soundObject: <span>null</span>
    },
    tonearm: {
      angle: <span>0</span>,
      angleToRecord: <span>16</span>,
      angleMax: <span>28</span>,
      dragging: <span>false</span>
    },
  };

  this.start = function() {};
  this.stop = function() {};
  this.setPitch = function() {};
  this.init = function() {};

}</code></pre>

<div style="text-align:justify">

<p>At the core, you have a fancy UI on top of a pretty standard sound 
player. Load, stop, play, pause, seek and load/play progress are the 
basics for offering a "usable" turntable implementation. Adding the 
mixer into the, er - mix, volume (and optionally, panning) control are 
also needed. All of this is covered by the <a href="http://www.schillmania.com/projects/soundmanager2/" title="SoundManager 2: JavaScript Sound API for the web">SoundManager 2</a> API, a project that I also develop and maintain.</p>

<p>Where things really get interesting is when pitch control, scratching
 and EQ are added to the list; scratching and related record tricks DJs 
perform are done by manipulating pitch over time, so pitch provides the 
base functionality for all sorts of interesting effects in combination 
with panning and volume. In effect, all turntablism is a sub-function of
 pitch control combined with the volume-cutting capabilities of a mixer.</p>

<p>Taking the literal object approach, there are <code>Turntable()</code> and <code>Mixer()</code> constructors which reference the three distinct items marked up in HTML - <code>#tt-1</code>, <code>#tt-2</code> and <code>#mixer</code>.</p>

<p>The turntable and mixer objects have logical structures for 
data/state and DOM references. At init or first-use, the data structure 
reads and caches static layout information from the DOM eg. <code>offsetHeight</code>, <code>position</code>
 and others. A caching approach avoids expensive browser reflow/layout 
that would otherwise be caused by repeated accesses to properties like <code>offsetHeight</code>.
 Properties like this are important when dealing with mouse events for 
grabbing and scratching the record, moving the various sliders and so 
forth.</p>

</div>

<h4 id="mouse-events" style="clear:none">Handling mouse events</h4>

<div style="text-align:justify">

<p>Both turntables and mixer have a number of draggable interactions 
associated with them. The record and platter watch mouse events for 
handling cueing (i.e., "seeking" for the beginning of a sound) and 
scratching via pitch control, as well as the pitch control knob itself 
which can be dragged. On the mixer side, rotary controls, horizontal and
 vertical faders can be clicked and dragged to slide or rotate. The 
standard <code>mousedown()</code> -&gt; <code>mousemove()</code> -&gt; <code>mouseup()</code> events apply, with event delegation being used in some cases to allow a single handler to target multiple controls.</p>

</div>

<h4 id="pitch-bending" style="clear:none">Pitch Bending: Dynamic sound processing</h4>

<p><em><strong>General disclaimer, here there be dragons etc.:</strong> 
My knowledge and understanding of practical math is not great. This is 
what I learned from attempting to build this feature, in addition to 
looking at others' partial implementations and example code.</em></p>

<div style="margin-bottom:1.5em">
 <div class="video-iframe">
   <iframe width="100%" height="390" frameborder="0" style="max-width: 480px;" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/OrfkAEQTecY.html" allowfullscreen="allowfullscreen"></iframe> 
  <p xmlns="http://www.w3.org/1999/xhtml" class="video-link">
   <a href="http://www.youtube.com/watch?v=OrfkAEQTecY">Pitch bending + RPM Button Demo</a> (YouTube)
  </p>
 </div>
</div>

<p class="header-comment">Sample source: <a href="http://sonreal.bandcamp.com/" title="SonReal, Vancouver-based hip-hop artist">SonReal - Haunted (ft. Ali Milner.)</a> Used with permission. <br />Screencast recorded on a slow 2008-era Mac Mini, so pardon the occasional graphics glitch.</p>

<p>As mentioned, scratching, platter and record "velocity" can be 
affected by the mouse and pitch controls. This ultimately results in a 
function call to alter the pitch of the sound, which is currently 
implemented within a special Flash 10/AS3-based build of the 
SoundManager 2 .SWF. The function call effectively boils down to <code>setPitch(<i>n</i>)</code> where <code><i>n</i></code>
 is say, ±10%. By dynamically adjusting this value over varying periods 
of time, scratching and pitch bending effects are both possible.</p>

<p>When creating or resampling sound data on-the-fly, Flash's <code>sampleData</code> event is used (or, Mozilla or Google's related audio data API methods.) The Flash <code>sampleData</code> event fires often during the regular playback of a sound object, and provides a buffer of 32-bit floating-point <code>ByteArray</code>
 samples which can be modified within a loop and fed into an output 
buffer. This data is then ultimately sent out to the sound card, and the
 sound is finally played.</p>

<p>In the case of speeding up sound - let's say 200% normal speed, in the simplest case - the buffer provided to the <code>sampleData</code>
 event is ignored and twice the samples needed are extracted from the 
source sound object, beginning at the sound's current position. If 
playing at a position 5 seconds into the sound and with a buffer of 1 
second's worth of audio, we'd extract 200% of the buffer's amount of 
sample data (i.e., from 5 to 7 seconds) for our source. A loop then goes
 through the two seconds of source data and writes <i>every other sample</i>
 to the output buffer; thus, we end up with two seconds of audio data 
cut in half, and the sound is heard playing back at 200% normal speed.</p>

<p>
 <code>200% faster: source [0,1,2,3,4,5,6,7] -&gt; output [0,2,4,6]</code>
</p>

<p>Where things get interesting and funky is playing between 0% and 100%
 speed, where source sound data must be "stretched", literally inserted 
into the output buffer more than once, in order to make the sound 
playback rate slower.</p>

<p>
 <code>200% slower: source [0,1,2,3] -&gt; output [0,0,1,1,2,2,3,3]</code>
</p>

<p>This self-imposed "DSP 101" crash course was frustrating at times, 
but sometimes trial-and-error is a good learning tool. Analogies can 
work, too: if the concept is a bit fuzzy, perhaps a fuzzy analogy will 
help.</p>

<p>Think of what happens when you zoom in on an image; at 200%, each 
pixel is blown up to twice its original size. In order to prevent the 
image from looking blocky and pixelated, resampling (often bicubic or 
linear) is used to smooth out the image data after resizing. Instead of 
chunky pixels, you get a slightly-blurry double-size image that is more 
acceptable than the pixelated, "raw" version. On the audio side, a 
similar thing happens with interpolation and resampling as the "gaps" of
 space created by stretching are filled in with identical data.</p>

<p>Again, my practical knowledge of DSP is pretty non-existent, so this 
implementation is probably inefficient (and inaccurate) in many ways. I 
suspect the interpolation is overly-simplistic, so scratching can 
audibly "break down" especially on high-frequency sounds. Bass drums and
 lower-frequency sounds are OK, though, and pitch bending is pretty safe
 down until a certain point.</p>

<p>Big thank-yous go out to both <a href="http://www.kelvinluck.com/2009/03/second-steps-with-flash-10-audio-programming/" title="Kelvin Luck: Second Steps With Flash 10 Audio Programming">Kelvin Luck</a> and the flash "AudioTool" animal himself, <a href="http://blog.andre-michelle.com/2009/pitch-mp3/" title="Andre Michelle: Pitch MP3 example">Andre Michelle</a>,
 for posting their own code, findings and notes which helped me to get 
this far on the Flash/AS3 audio processing side. As it turns out, 
debugging "one-off" and buffer underrun errors with 2048-iteration size 
loops through 44.1 KHz, 16-bit stereo waveform data samples inside Flash
 is a pain.</p>

<pre class="block"><code>function sampleData(<span>event: SampleDataEvent</span>): <span>void</span> {

<span><span>  /*
   * Flash 10/AS3 pseudo-code for pitch bending, fast/slow playback
   * actual implementation is much more ugly + hackish. :D
  */</span></span>

  <span><span>// 32-bit floats</span></span>
  var source:ByteArray = <span>new ByteArray();</span>

  <span><span>// number of samples to process (buffer size)</span></span>
  var buffer_size:int = <span>2048</span>;

  <span><span>// how much source data we need to fetch (eg. 2 seconds)</span></span>
  var bytesNeeded:int = <span>buffer_size</span>*<span>rate</span>;

  <span><span>// get source data, store in ByteArray</span></span>
  sound.extract(<span>source</span>, <span>bytesNeeded</span>, <span>soundPosition</span>);

  <span><span>// main processing loop</span></span>
  for (var i = <span>0</span>; i &lt; <span>buffer_size</span>; i++) {
    <span><span>// where to extract from</span></span>
    sound.position = <span>i</span>*<span>rate</span>; 
    <span><span>/*
     * source.readFloat() calls x2 to fetch sound bytes
     * interpolate ByteArray data
     * output.writeFloat() with interpolated values
    */</span></span>
  }

}</code></pre>

<h4 id="brake-effects">Simulating power-down and electronic brake effects</h4>

<p>Since we now have pitch control, it's relevant to consider how 
switching the turntable power on and off (or pressing the start/stop 
button) affects the motor, controlling the platter and thus the record 
speed. In the case of a turntable, the start/stop button applies an 
electronic "braking" effect when stopping, whereas turning off the power
 allows the platter to freely spin down naturally.</p>

<div style="margin-bottom:1.5em">

 <div class="video-iframe">
   <iframe width="100%" height="390" frameborder="0" style="max-width: 480px;" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/sk7V9fGWI6A.html" allowfullscreen="allowfullscreen"></iframe> 
  <p xmlns="http://www.w3.org/1999/xhtml" class="video-link">
   <a href="http://www.youtube.com/watch?v=sk7V9fGWI6A">Start/Stop vs. Power brake effects</a> (YouTube)
  </p>
 </div>

</div>

<p class="header-comment">Sample source: <a href="http://www.youtube.com/watch?v=SREIkuX5Xeg">ill.Gates - Scratchdisc</a>. Used with permission.</p>

<p>For both braking and powering down, the turntable starts a single 
interval timer where the velocity is cut by either 2% or 10% for each 
"frame" of animation.</p>

<pre class="block"><code>turntable.applyBrakeEffect = function(<span>hasPower</span>) {

    var timer,
        recordRate = <span>self.data.record.velocity</span>,
        <span><span>/*
         * how fast the platter should spin down, based on
         * whether power knob or stop/start button were used.
        */</span></span>
        brakeMultiplier = (<span>hasPower</span> ? <span>0.98</span> : <span>0.9</span>);

    function endEffect() {

      <span><span>// callback: when the platter has fully stopped</span></span>
      window.clearInterval(<span>timer</span>);
      timer = <span>null</span>;
      self.data.platter.locked = <span>false</span>;

    }

    function brakeEffect() {

      <span><span>// reduce platter velocity by % until 0.</span></span>
      if (!self.power.motor) {
        recordRate *= <span>brakeMultiplier</span>;
        self.setVelocity(<span>recordRate</span>);
        if (Math.abs(<span>recordRate</span>) &lt; <span>0.01</span>) {
          self.setVelocity(<span>0</span>);
          self.applyVelocity(<span>0</span>);
          endEffect();
        }
      } else {
        endEffect();
      }

    }

    <span><span>// keep platter + record velocities in sync</span></span>
    self.data.platter.locked = <span>true</span>;

    <span><span>// begin braking</span></span>
    timer = window.setInterval(<span>brakeEffect</span>, <span>20</span>);

  };
</code></pre>

<h4 id="playing-the-record">Playing the record: Angle and velocity</h4>

<p>In terms of the UI, the turntable spins when the power light is on, 
and the "motor" is on (via the start/stop button.) When powering up, the
 motor begins acceleration at a given rate and applies this velocity to 
the platter. The record trails the platter velocity and allows for a 
certain amount of slip or lag, in the spirit of the real thing. When 
throwing or backspinning the record, it may also take some time to lose 
its own velocity and eventually get up to speed with the underlying 
platter. The same logic applies if the platter is not spinning, or if 
the motor is off.</p>

<h4 id="record-physics">Record "physics": Slipperiness, inertia, velocity vs. platter</h4>

<p>As the UI update "thread" runs, the record velocity is continually 
compared to the platter's and is adjusted as needed. In a special-case 
scenario, the record has less friction if backspin has been applied 
(i.e., the record has been thrown in reverse direction of the platter.)</p>

<pre class="block"><code><span><span>// check record vs. platter velocity</span></span>
if (self.data.record.velocity !== self.data.platter.velocity) {

  var diff = <span>self.data.record.velocity</span> - <span>self.data.platter.velocity</span>,
      <span><span>// adjust speed by 25% of delta each time</span></span>
      absDiffScaled = Math.abs(<span>diff</span>) * <span>0.25</span>;

  if (diff &lt; <span>0</span>) {
    <span><span>// record needs to speed up</span></span>
    <span><span>// if moving backwards, compensate for forward record movement by scaling down diff.</span></span>
    self.data.record.velocity += <span>absDiffScaled</span> * (<span>self.data.record.velocity</span> &lt; <span>0</span> &amp;&amp; <span>self.data.platter.velocity</span> !== <span>0</span> ? <span>0.5</span> : <span>1</span>);
  } else {
    <span><span>// record needs to slow down</span></span>
    self.data.record.velocity -= <span>absDiffScaled</span>;
  }

}</code></pre>

<h4 id="record-tracking">Tracking: The tonearm, angle and "drift"</h4>

<p>As the record plays through, the tonearm will track through a virtual
 spiral groove until it reaches the end. In MP3 land this is calculated 
simply and in a linear fashion, where the tonearm angle is set as <code>tonearm.startAngle + (tonearm.maxAngle * (sound.position / sound.duration))</code>. From start to finish of a "track", the tonearm will move between 15 and 55 degrees over the record.</p>

<p>In reality, very few records are truly circular in shape; many have 
slight deviations, and this can be seen in the tonearm movement while 
the record is spinning. To this end and for a bit of fun, the whole 
tonearm assembly can "wobble" side-to-side slightly while on the record 
simply by applying <code>Math.sin()</code>, keying it off of the rotation angle of the record and scaling up the motion slightly.</p>

<pre class="block"><code>self.data.tonearm.drift = Math.sin(<span>self.data.record.angle</span>) * <span>self.data.tonearm.driftMax</span>;</code></pre>

<h4 id="end-of-record">The "End Of Record" case</h4>

<p>Turntable owners will recognize the sound of a record that has run 
its course. Perhaps you were distracted, busy or in the other room when 
the last song ended; once the needle hits the end of the groove, it sits
 in an endless loop at the edge of the paper label and makes a 
distinctive sound unique to the record being played.</p>

<div style="margin-bottom:1.5em">
 <div class="video-iframe">
   <iframe width="100%" height="390" frameborder="0" style="max-width: 1080px;" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/HajHz0c1kAE.html" allowfullscreen="allowfullscreen"></iframe> 
  <p xmlns="http://www.w3.org/1999/xhtml" class="video-link">
   <a href="http://www.youtube.com/watch?v=HajHz0c1kAE">Turntable Loop</a> (YouTube)
  </p>
 </div>

</div>

<p>Recreating the "end of record" bump and/or click soundtrack 
associated with this is fairly trivial in JavaScript. The prototype uses
 the sound taken from this video, in fact.</p>

<pre class="block"><code>turntable.sound.onfinish = function() {
  this.setPosition(<span>0</span>); <span><span>// reset current "record"</span></span>
  turntable.endOfRecordSound.play({
    onfinish: <span>turntable.sound.onfinish</span> <span><span>// endless loop</span></span>
  });
}</code></pre>

<h3 id="performance-considerations">Performance &amp; Support Considerations, caveats etc.</h3>

<h4 id="hardware-acceleration">Hardware Acceleration (or alternately, "CPU fires")</h4>

<p>The shiny UI and layout of this prototype comes at a cost, of course.
 As web designs "expand" to take advantage of CSS for rich animations, 
transitions, alpha-transparent elements and so forth, drawing operations
 consequently become more expensive. In addition to effects, more 
designs can be rendered in pure CSS instead of using external images. 
Thus, "accelerated drawing" - having rendering and/or layout work done 
by the GPU or via another efficient processor - is becoming increasingly
 important.</p>

<p>Theoretically, CSS can provide for greater optimization opportunities
 than inline images because the structure is implied. Realistically, 
could a CSS drop shadow be rendered faster by a GPU as opposed to a 
tiled alpha-transparent PNG? Is it just bytes, or is there a difference 
at this point? (This is beyond my limited knowledge of rendering 
engines, so I'm left to theorize.) In either event, the turntable 
prototype does use CSS for many effects, and even a few key UI elements;
 the turntable pitch control and the mixer are drawn entirely using CSS,
 and that may provide for some optimizations over the use of static 
images.</p>

<h4 id="acceleration-selling-points">Acceleration as a browser selling point</h4>

<p>Without acceleration, the turntable UI <i>really</i> chokes as it falls back to leaning on the CPU to do the heavy lifting, animating layers using CSS' <code>transform:rotate()</code>,
 gradients, alpha opacity and so on. Supporting accelerated drawing (or 
"GPU-accelerated compositing") may turn out to be a big competitive edge
 in the near future for making popular browser-based "HTML5" games 
shine.</p>

<p>Browser acceleration is presently not a majority feature. For 
acceleration to work support must exist not only in the browser, but 
also in the video drivers (sometimes down to specific versions) and the 
operating system on top of the hardware itself. (One might argue this is
 true for any feature, but acceleration in browsers is a relatively-new 
and specific thing.)</p>

<p>Microsoft boasts of acceleration as a new and important feature for 
Internet Explorer 9 - which is great - but the browser is available only
 on Vista SP2+ and Windows 7. This differs from Opera, Mozilla and even 
Apple, who are all aiming for acceleration on at least two third-party 
operating systems. Surprisingly, Safari 5 on my 2006-era Fujitsu 
Lifebook laptop, running WinXP SP3 at 1.2 Ghz with an Intel GMA 915 
chipset video card, manages to be accelerated one way or another; the 
turntable demo gets 20 frames per second on Safari 5, beating Firefox 4 
which gets only 4 fps by comparison (and pegged CPU use) - obviously not
 accelerated.</p>

<p class="header-comment">(Maybe it's my video card and/or driver that 
is the problem here; Firefox is my favourite browser, for the record, 
and I'd love to see it be fast on this hardware as well. It shows 15 fps
 on my GMA 950-based, 2008-era Mac Mini, but appears not to be 
accelerated and still pegs the CPU. Maybe I'm just doing it wrong?)</p>

<p>Credit is due to Apple here, who appear to have done quite a nice job
 of getting the most out of legacy hardware where others haven't yet (or
 in the case of Microsoft, won't support a legacy OS), and on a 
non-native OS at that. It's worth mentioning that Apple's mobile devices
 do a pretty good job at acceleration, also; an iPhone 3GS can render 
the UI and draw the turntable playing a record surprisingly smoothly. 
However, iOS can currently only play one sound at a time - so despite 
the nice UI, you won't be DJing there via JavaScript just yet.</p>

<p id="blacklist-note">GPU and related drawing acceleration is still 
relatively new to browsers, so it's assumed that things will improve. At
 time of writing, Google's Chrome browser has acceleration enabled by 
default as of version 12, but like Mozilla, <a href="https://wiki.mozilla.org/Blocklisting/Blocked_Graphics_Drivers" title="Mozilla Wiki: Blacklisting/blocked Graphics Drivers">blacklists</a>
 acceleration for certain known "bad" or buggy hardware and/or software 
configurations. Similar rules apply for Firefox, last I checked (using <code>about:support</code> for acceleration status.)</p>

<h4 id="latency">Latency and "performance"</h4>

<p>Delays between "pushing the button" and "hearing the sound" are the 
bane of digital DJs and musicians everywhere. In a perfect world, 
digital would match analog's minimal or zero-latency performance. My 
understanding is that in exchange for the digital conversion, 
compression and routing of binary bits representing analog sound being 
passed around in systems with additional hardware and software stacks 
below and underneath the sound hardware itself (including the operating 
system, drivers and so on), we'll simply have to accept a certain amount
 of latency. In spite of complexity, however, computers can still 
provide very low-latency audio in the right situations.</p>

<p>Interestingly, Flash under Safari on OS X has reasonably-low latency <a href="http://www.kaourantin.net/2008/05/adobe-is-making-some-noise-part-2.html" title="Tinic Uro, Flash Engineer: Adobe Is Making Some Noise Pt. 2">considering its history</a> and position in the software stack. From within the <code>sampleData</code>
 event in Flash 10, latency is reported as either 23 or 46 milliseconds.
 This would be considered as being pretty poor in live DJ hardware or 
console-based cases, but it's less of an issue when you're DJing, say, 
via mouse and keyboard controls in a browser on your laptop at a small 
house party. Even if your performance lags a bit, at &lt;50 msec, 
members of the appropriate sex will probably still find you attractive.</p>

<p>Flash 10 under Firefox and Safari on my Windows XP laptop has far 
worse latency, reporting 278 and 371 milliseconds, respectively. This 
makes scratching effectively useless, as the technique is 
near-impossible to pull off if the mouse and record movement are not 
seen and heard at effectively the same time. Provided you can resist the
 urge to wikki-wikki up a scratch-fest <i>a la</i> Kid Koala, Mix Master
 Mike or Q-Bert, your house party guests probably won't notice the 
0.3-second difference. Mixing and beat-matching tracks will still prove 
to be challenging, though, and you'll have to account for the delay when
 cueueing music.</p>

<h4 id="scratching">Scratching, mouse resolution and timing</h4>

<p>It is unclear whether JavaScript <code>mousemove()</code> events are 
throttled on a per-browser basis, and if so, whether throttling is based
 on a time interval or something else. In any case, it has been a 
challenge to capture mouse movements and translate them into motion 
vectors that are anywhere near real-world physics from within 
JavaScript.</p>

<p>Given the display size of the UI and mouse event frequency, it is 
difficult to smoothly scratch the record when the mouse is being moved 
closer to the center as there are fewer data points to work with. More 
events are fired when the mouse is moving along the outside of the 
record, but the points are still limited within the record's 326-pixel 
radius. The smoothest record movement is obtained when the mouse drags 
outside of the record area, and can move with increased precision.</p>

<p>A third wrinkle to consider is that mouse events do not fire when the mouse <i>stops</i> moving; rather, the <code>mousemove()</code>
 event simply ceases to fire. Left unchecked, the record would continue 
to play at its last applied velocity - an undesirable behaviour. When 
the mouse stops, the record should  lose its velocity and quickly revert
 to "zero." Since no events fire when the mouse stops, a timer is 
constantly being set, canceled and re-set during <code>mousemove()</code>
 that checks for continued movement - and if none is found, then the 
record can instantly drop its velocity to zero. Implementing this 
behaviour allows for scratching to work at various speeds, and to 
reasonable effect considering the lack of event granularity.</p>

<pre class="block"><code><span><span>/*
 * (within mousemove() handler)
 * try to cancel/stop motion within a reasonable delay
 * after the last mouse move - otherwise, the record
 * will follow the last "known" speed.
 * the next cancel check is scheduled based
 * on the time since the last mousemove() event.
*/</span></span>
if (drag_timer) {
 window.clearTimeout(<span>drag_timer</span>);
}

drag_timer = window.setTimeout(function() {
  <span><span>// draging, or scratching with power off</span></span>
  if (self.data.record.dragging || !self.power.motor) {
    self.data.record.velocity = <span>0</span>;
    self.applyVelocity(<span>self.data.record.velocity</span>);
    drag_timer = <span>null</span>;
  }
  <span><span>// next stop between 20 and 150 msec, based on mouse timing</span></span>
}, Math.min(<span>150</span>, Math.max(<span>20</span>, <span>self.data.record.lastMouseMove</span> ? (
   (<span>now</span> - <span>self.data.record.lastMouseMove</span>) * <span>2</span> : <span>0</span> ) ) );

<span><span>// update the "last fired" value</span></span>
self.data.record.lastMouseMove = <span>new Date();</span></code></pre>

<p style="padding-top:1em">This video shows some of the velocity-killing
 code at work, as well as the effects of moving the mouse both at 
different speeds and distances from the center of the record. (Again, 
granularity increases with distance.) There is room for improvement on 
both the Flash and JavaScript sides in terms of handling scratching and 
sound quality, but timers in JS aren't exactly precise.</p>

<div style="margin-bottom:1.5em">

 <div class="video-iframe">
   <iframe width="100%" height="390" frameborder="0" style="max-width: 480px;" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/u-k4R_nMfvI.html" allowfullscreen="allowfullscreen"></iframe> 
  <p xmlns="http://www.w3.org/1999/xhtml" class="video-link">
   <a href="http://www.youtube.com/watch?v=u-k4R_nMfvI">Scratching, timing and mouse movements</a> (YouTube)
  </p>
 </div>
 
</div>

<p class="header-comment">Sample used: Common - <a href="http://www.youtube.com/watch?v=W_-qRcHAhzk">The Light</a>.</p>

<h4 id="html5-vs-flash">Support vs. features: HTML5 vs. Flash</h4>

<p>At some point, the palpable elephant in the room has to be acknowledged. Due to the <a href="http://24ways.org/2010/the-state-of-html5-audio" title="Probably, Maybe, No: The State Of HTML5 Audio">state of HTML5 audio</a>,
 Flash is still a valid option for providing audio capabilities to 
browsers that lack HTML5 support entirely, or don't support non-free 
audio formats like MP3 which are still popular with both DJs and the web
 at large.</p>

<p>For the interests of the turntable demo, Flash 10 also provides the 
ability to do dynamic sound processing - which means that things like 
scratching, pitch bending and EQ, things not officially in the HTML5 
spec (at time of writing) are possible while also using MP3 formats on a
 wider range of browsers. If you're on a device that doesn't support 
Flash (like iOS), then you will get the non-Flash experience - which 
will currently mean that "scratch mode", pitch bending, scratching and 
EQ features are not available, but the basics will still work.</p>

<p>As mentioned, Mozilla's Audio Data API and Google's Web Audio API 
both provide similar low-level access to audio data from JavaScript, 
which is a wonderful thing. Google specifically is aiming for a 
low-level, low-latency API which will provide conveniences to developers
 hoping to write applications that need responsive sound. The demo does 
not currently use either APIs, but both are in development and should be
 functional enough to supplant most or all of the work done by Flash at 
some point. (Mozilla's API does not support arbitrary byte extraction at
 this time, which is required to make scratching-in-reverse work in 
particular.)</p>

<h3 id="miscellany">Miscellany</h3>

<h4 id="waveforms">Waveforms</h4>

<div style="float:right;display:inline;max-width:350px;margin:0px 0px 0.5em 2em">
 <a href="http://www.flickr.com/photos/schill/5528130345/" title="Patterns by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5528130345_8911ba7efa.jpg" style="width: 100%;" alt="Patterns" /></a>
 <p class="header-comment">The waveforms of Cypress Hill's "<i>Boom Bitty Bye Bye</i>" (top), and Westside Connection's "<i>Bow Down</i>", wrapped for display purposes.</p>
</div>

<div style="text-align:justify">

<p>In order to show a waveform and track the approximate position of the
 sound, it made sense to generate and cache a waveform image which could
 be loaded as a background and positioned based on the image width and 
the sound's progress.</p>

<p>To generate the image, a PHP script (adapted from code by <a href="http://andrewfreiday.com/2010/04/29/generating-mp3-waveforms-with-php/">Andrew Freiday</a>)
 runs LAME, downsampling the MP3 and outputting a temporary 8 Khz .WAV 
file. PHP then reads the file, skipping the RIFF header and storing the 
following bytes in an array. The array is then looped over, and PHP's GD
 image library creates a .PNG by drawing the values as lines scaled to 
the desired image dimensions. Finally, optiPNG runs and optimizes the 
file, storing it in a cache directory for future requests.</p>

<p>A 500-pixel-scaled version of the waveform is also generated for the 
hover state, which shows the entire track within the turntable UI. 
Perhaps for historical reasons, Firefox 4 will not currently display any
 image with a side larger than 65535 pixels (AKA, a 16-bit unsigned 
integer?) To work around this, a third image is created which is &lt;= 
65535 pixels wide.</p>

</div>

<h4 id="cue-points">Cue points</h4>

<p>Once waveforms are being shown, it's interesting to think about being
 able to "bookmark" the start of a beat, loop or a sample at a certain 
point in a track for later reference. If a marker is placed where a bass
 drum kicks off a loop, that position can easily be recalled and the 
loop can be seamlessly re-started (subject to the user's timing and 
accuracy, of course.)</p>

<p>In the real world, hip-hop DJs would (and still do) use pieces of 
tape to physically mark a spot on the record, either as a reference 
point or as the actual part of a record where a desired loop or sound 
sample begins. With a small border a bit of opacity, placing a piece of 
"tape" on the record is fairly straightforward.</p>

<p>In the prototype, the keys <code>1-5</code> and <code>6-0</code> set 
cue points on the left and right decks, respectively, while a record is 
playing. Subsequent key presses will recall a cue point; using the <code>shift</code> key will overwrite or update a cue point marker, and <code>ctrl</code> will remove it.</p>

<div style="margin-bottom:1.5em">

 <div class="video-iframe">
   <iframe width="100%" height="390" frameborder="0" style="max-width: 480px;" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/3msrXgvrA4g.html" allowfullscreen="allowfullscreen"></iframe> 
  <p xmlns="http://www.w3.org/1999/xhtml" class="video-link">
   <a href="http://www.youtube.com/watch?v=3msrXgvrA4g">Cue Points (Sampling) Demo</a> (YouTube)
  </p>
 </div>

</div>

<p class="header-comment">Sample source: Beck - <a href="http://www.youtube.com/watch?v=YgSPaXgAdzE">Loser</a>, which itself samples the drums from Johnny Jenkins' "I Walk On Guilded Splinters."</p>

<h3 id="demo">Putting It All Together</h3>

<p>Here's a quick example showing the turntables in CSS "debug" / layout
 mode, setting of cue points, cueing, backspin, pitch bending, beat 
matching of two tracks, cross-fading and cutting using the mixer.</p>

<div style="margin-bottom:1.5em">

 <div class="video-iframe">
   <iframe width="100%" height="390" frameborder="0" style="max-width: 1024px;" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/F3OfmtE7qL4.html" allowfullscreen="allowfullscreen"></iframe> 
  <p xmlns="http://www.w3.org/1999/xhtml" class="video-link">
   <a href="http://www.youtube.com/watch?v=F3OfmtE7qL4">Cueing, Pitch and Beat Matching / Mixing Demo</a> (YouTube)
  </p>
 </div>
 
</div>

<p class="header-comment">This demo uses samples of favourites from my personal music collection: Lyrics Born's <a href="http://www.youtube.com/watch?v=oL4fG3TIMdc">I Changed My Mind</a> (iTunes album: <a href="http://itunes.apple.com/us/album/same-different-day/id60294247">Same !@#$ Different Day</a>), and The Cardigans' <a href="http://www.youtube.com/watch?v=x9ZwORlV4GE#t=0m14s">Erase / Rewind</a> (iTunes album: <a href="http://itunes.apple.com/us/album/gran-turismo/id413458">Gran Turismo</a>.)</p>

<h2 id="can-i-use-this">This is a pretty experimental hack with lots of caveats. <span style="white-space:nowrap">Is it actually usable?</span></h2>

<p>The prototype is an experimental bit of web audio fun, stamped with a
 number of warning labels and is not intended for pro or "skratch" DJs 
as frankly, it will quickly disappoint - and what DJ really wants to 
scratch records with a mouse, anyway. ;)</p>

<p>CPU and audio latency are the primary issues with the prototype. 
Firstly, the shiny UI requires a fair bit of processing power to draw 
and animate. On top of this, the Flash 10/AS3-based audio processing 
portion needs an amount of CPU time to do its work. If you don't have a 
GPU (i.e., "hardware acceleration") taking care of the layout, that work
 falls on the CPU and can max it out, causing the Flash-based "scratch 
mode" audio to become completely unusable. In the non-GPU case, you can 
use non-scratch mode and while the UI may be slow (and your CPU may 
still be pegged), audio plays normally and the demo is at least somewhat
 functional.</p>

<div style="float:right;display:inline;margin:0px 0px 0.5em 2em;width:240px">
 <a href="http://www.flickr.com/photos/52201706@N04/5573063518/" title="DJ Schill @ Bayjax by drgath, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="180" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5573063518_e54cb3ed8f_m.jpg" alt="DJ Schill @ Bayjax" /></a>
 <p class="header-comment"><a href="http://www.flickr.com/photos/52201706@N04/5573063518/">DJ Schill @ Bayjax</a> by Derek Gathright, on Flickr (an earlier prototype version, Yahoo!-themed)</p>
</div>

<p>If you are using a modern browser and a software + hardware stack 
that gets you GPU acceleration in said browser, you should be in good 
standing. Bonus points if you're on OS X, where flash audio latency is 
also less severe; thus, Safari 5, Webkit nightlies or Chrome 12 builds 
on a MacBook Pro make for a pretty usable experience. Audio stuttering 
can still occur under load, so it's helpful to close other programs that
 might eat up system resources.</p>

<p>In theory, an accelerated MacBook Pro + Safari setup should suffice 
for DJing a small gathering, house party, or perhaps the pre-show of a 
"Bayjax" talk at Yahoo! in Sunnyvale, California. (In my case, I was 
giving a talk on HTML5 audio at an internal YUI conference and was 
invited to play some "pre-show" music at the Bayjax event coincidentally
 being hosted downstairs. Thankfully, the demo worked.)</p>

<p>If you're using Windows XP, the 300+ millisecond latency that Flash 
audio has on XP will make scratching and mixing frustrating and 
basically impossible. I'm not sure how Vista and Windows 7 are in terms 
of latency, so your mileage may vary.</p>

<p>As previously mentioned, newer JavaScript audio APIs are being 
developed by Mozilla and Google that have the potential for 
higher-performing, lower-latency audio manipulation - so the current 
flash implementation may be less relevant over time.</p>

<h2 id="history">What was the point of all of this, again?</h2>

<p>Given the almost 8,000 words in this article (and <i>congratulations and thanks for making it this far</i>) I wouldn't blame you for having forgotten, either.</p>

<div style="clear:right;float:right;display:inline;margin:0px 0px 1em 2em;width:240px">
 <p style="text-align:center"><b>Development history: Snapshots</b></p>
 <p style="margin-top:-2em;text-align:center" class="header-comment">Periodic photos of the UI in development.</p>
 <a href="http://www.flickr.com/photos/schill/5412683142/" title="Turntable UI Prototype by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="240" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5412683142_d80ebf059a_m.jpg" alt="Turntable UI Prototype" /></a>
 <p class="header-comment">Day #1: <code>border-radius</code>, <code>transform:rotate</code> and a pretty terrible attempt at drawing a tonearm. ;)</p>
</div>

<div style="clear:right;float:right;display:inline;margin:0px 0px 1em 2em;width:240px">
 <a href="http://www.flickr.com/photos/schill/5412683142/" title="Turntable UI Prototype: Progress by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="188" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5422258252_68604301c5_m.jpg" alt="Turntable UI prototype: Progress" /></a>
 <p class="header-comment">Week #1: Larger size, <a href="http://www.flickr.com/photos/fumes/4840149025/in/set-72157614885900032/">tonearm line-art</a> via Flickr user <a href="http://www.flickr.com/photos/fumes/">fumes1200</a>. The image was a tattoo design he made for a friend(!)</p>
</div>

<div style="clear:right;float:right;display:inline;margin:0px 0px 1em 2em;width:240px">
 <a href="http://www.flickr.com/photos/schill/5439623643/" title="Wheels Of Steel: Turntable Prototype by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="101" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5439623643_419f269c23_m.jpg" alt="Wheels Of Steel: Turntable Prototype" /></a>
 <p class="header-comment">Week #2: A hacked-together platter ring and functioning HTML5 <code>&lt;input type="range" /&gt;</code> element for the cross-fader.</p>
</div>

<div style="clear:right;float:right;display:inline;margin:0px 0px 1em 2em;width:240px">
 <a href="http://www.flickr.com/photos/schill/5448721285/" title="The hi-fi goes - hi-fi. by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="98" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5448721285_03385e1f8e_m.jpg" alt="The hi-fi goes - hi-fi." /></a>
 <p class="header-comment">Week #4: The hi-fi goes <i>hi-fi</i>, thanks to graphics from a graphic designer friend, <a href="http://www.kylekesterson.com/" title="Kyle Kesterson, Seattle-based graphic designer">Kyle Kesterson</a>.</p>
</div>

<div style="clear:right;float:right;display:inline;margin:0px 0px 1em 2em;width:240px">
<a href="http://www.flickr.com/photos/schill/5501820540/" title="Ever-so-slightly off-brand. by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="106" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5501820540_9e4377f863_m.jpg" alt="Ever-so-slightly off-brand." /></a>
 <p class="header-comment">Week #6: Custom slipmats! (Cheap Canadian knock-offs of the "Technics" brand.)</p> 
</div>

<div style="clear:right;float:right;display:inline;margin:0px 0px 1em 2em;width:240px">
 <a href="http://www.flickr.com/photos/schill/5520907272/" title="Turntable Prototype - Waveforms by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="115" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5520907272_066d8cf261_m.jpg" alt="Turntable Prototype - Waveforms" /></a>
 <p class="header-comment">Week #6: Waveforms and cue points have been added to the UI. The first take at <a href="http://www.youtube.com/watch?v=6NiMMSyk9GU">pitch bending</a> has recently been implemented.</p> 
</div>

<div style="clear:right;float:right;display:inline;margin:0px 0px 1em 2em;width:240px">
 <a href="http://www.flickr.com/photos/schill/5574536780/" title="turntable-prototype-screenshot-yahoo by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="101" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5574536780_0002c27d9a_m.jpg" alt="turntable-prototype-screenshot-yahoo" /></a>
 <p class="header-comment">Week #8: Pitch controls are under each deck, 
and a mixer UI is in the works; a Yahoo!-themed CSS skin is made for a 
YUI conference demo.</p> 
</div>

<div style="clear:right;float:right;display:inline;margin:0px 0px 1em 2em;width:240px">
<a href="http://www.flickr.com/photos/schill/5604991082/" title="Turntable Prototype - Pitch Control (take 2: progress) by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="92" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5604991082_742e0cacfc_m.jpg" alt="Turntable Prototype - Pitch Control (take 2: progress)" /></a>
 <p class="header-comment">Week #10: Pitch control slider UI progress (rendered as 100% CSS, no images, w00t.)</p> 
</div>

<div style="clear:right;float:right;display:inline;margin:0px 0px 1em 2em;width:240px">
 <a href="http://www.flickr.com/photos/schill/5628612523/" title="&quot;The Wheels Of Steel&quot; Browser-based turntable prototype by .schill, on Flickr" style="background: none repeat scroll 0% 0% transparent;"><img width="240" height="113" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/5628612523_002ca90a43_m.jpg" alt="&quot;The Wheels Of Steel&quot; Browser-based turntable prototype" /></a>
 <p class="header-comment">Week #12: UI polish, code tweaks; pretty much feature-complete.</p>
</div>

<div style="text-align:justify">
	
<p>I've wanted to push the capabilities of the web browser and build a 
functional, web-based turntable UI in HTML + CSS + JS for years; native 
web capabilities are just now getting to the point where it's actually 
feasible, with Flash providing audio support in some cases.</p>

<p>The "Wheels Of Steel" prototype started on January 31st, 2011 as an 
experimental side project, and took twelve weeks of personal time split 
between evenings and weekends to get to "feature complete." An 
additional month (to date) has been spent tweaking layout and features. 
At the end of day #1, I had a  box with a <code>border-radius</code>-based
 circle for a record along with a cheaply-drawn tonearm tracking across 
it. While simplistic, this was encouraging and motivated me to improve 
the design and add features.</p> 

<p>A few more graphic elements were added as work continued. I searched 
on Flickr for reference images, and found a piece of tonearm line art 
that a DJ and illustrator had made for a friend who was getting a 
tattoo. An email and a response granting permission later, the tonearm 
was worked into the prototype. Meanwhile, I was working on "scrubbing" 
the record on the JavaScript side, tracking position as the record 
rotates.</p>

<p>By week two, basic drag and tracking of the record was working; the 
first stab at a cross-fader was in there, too. It was now possible to 
cue the beginning of a track, and do some basic beat juggling between 
two turntables. It was still early, but the progress was promising.</p>

<p>A month in, an email titled <i>Graduation day!</i> arrived in my inbox; it was a surprise gift from graphic illustrator friend <a href="http://www.kylekesterson.com/" title="Kyle Kesterson, Seattle-based graphic designer">Kyle Kesterson</a>,
 who provided some amazing graphics and took the turntable UI from "eh" 
to "whoah" overnight. Kyle said he was inspired to do a turntable 
rendering after playing with the demo for over an hour. I can't thank 
him enough!</p>

<p>After the new graphic design, I started adding elements like 
Technics-"inspired" slipmats. Work was being done on the Flash 10/AS3 
pitch controls and handling behind the scenes, so that scratch and pitch
 bending would be possible. The pitch stuff eventually proved to be the 
most challenging to implement. Some time around here the cue point stuff
 began, an experiment that turned into a fun feature.</p>

<p>Record "physics" were also being developed around this point - 
namely, the interactions between the turntable "motor", platter and 
record - with an eye toward pitch bending and scratching in the near 
future. If you throw the record, it should backspin and eventually catch
 up with the forward-moving platter, and the record's pitch should also 
follow suit.</p>

<p>By week six, I had cue points (represented as pieces of tape on the 
record, like DJs use) up and working nicely; this made looping and 
sample cutting possible, similar to what an MPC might do, but with the 
bonus of having a scratch-able record that could be grabbed and moved 
immediately after recalling a sample. Pitch slider controls were now 
visible in the UI, and PHP-generated waveforms started tracking the 
progress of the sound as it played.</p>

<p>The pitch controls moved onto the turntable UI within the next two 
weeks, and were rendered via HTML and CSS, using no static images. 
Surprisingly, the labels looked tight when rendered as text, even at 
sub-10-pixel sizes.</p>

<p>Three months in, the UI and core features had more or less been 
finished. Lots of time had been spent testing and playing music. The 
whole thing is still quite experimental and can eat up CPU in the best 
of cases, but I'm quite surprised with how far the design and features 
have run; much further than I ever thought.</p>

<p>Feedback from co-workers and friends who have seen and played with 
the Wheels Of Steel prototype have been highly positive. It's also been 
demoed at meet-ups, a conference at Yahoo! and a few external venues, so
 it's fun to finally get the release out for a larger audience to play 
with.</p>

</div>

<h2 id="the-end"><i>Fin</i></h2>

<p>We now have digital toys and things that allow music to be 
manipulated in ways never imagined before - and yet, there remains 
something special and meaningful about the old, scratchy, dusty sound of
 analog mediums and the hands-on, real physical experience of mixing 
music that digital technology - this HTML experiment included - still 
aims to match.</p>

<p style="clear:both;text-align:center"><code>--- ( END OF RECORD ) ---</code></p>

<p>Since you made it all the way to the end, thank you for reading!</p>

<p>And now, for something completely different...</p>

<div style="margin-bottom:1.5em">

 <div class="video-iframe">
   <iframe width="100%" height="390" frameborder="0" style="max-width: 640px;" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/Gg320MZ8c60.html" allowfullscreen="allowfullscreen"></iframe> 
  <p xmlns="http://www.w3.org/1999/xhtml" class="video-link">
   <a href="http://www.youtube.com/watch?v=Gg320MZ8c60">Nyan Cat Overload!</a> (YouTube)
  </p>
 </div>

</div>

<script async="async">
(function(){
  var video_elements, i, video_ok = 'video_ok';
  if (!navigator.userAgent.match(/mobile/i)) {
    // if not mobile, show YouTube iFrames instead of plain old links.
    // for some reason, iOS seems to terminate document rendering after the first iframe.
    video_elements = Y.D.getElementsByClassName('video-iframe');
    for (i = video_elements.length; i--;) {
      video_elements[i].innerHTML = video_elements[i].innerHTML.replace(/(\&lt;\!\-\-)|(\-\-\&gt;)/g,'');
    }
    document.body.className = (document.body.className === '' ? video_ok : document.body.className + ' ' + video_ok);
  }
}());
</script>

  </div>

 <div class="top header"><h4>Related links</h4><div class="divider"> </div></div><div class="copy"><ul><li><a href="http://wheelsofsteel.net/">The Wheels Of Steel: Turntables in your browser (a web-based DJ prototype)</a></li><li><a href="http://www.flickr.com/photos/schill/sets/72157626808348290/">Development screenshots + related content (Flickr set)</a></li><li><a href="http://24ways.org/2010/the-state-of-html5-audio">"Probably, Maybe, No": The State Of HTML5 Audio (24ways.org)</a></li><li><a href="http://www.schillmania.com/projects/soundmanager2/">SoundManager 2: Javascript Sound API</a></li> </ul></div>

  <!-- /entry content -->

  </div>

  <!-- right column -->

  <div id="right">

<!-- end unique content -->

   <div id="nav">

    <div id="options-stub"></div>

    <div id="stub" class="stub"></div>

<ul id="nav-list" class="top">
	
<li id="external">

	<h2 title="Recent Activity"><span class="l"></span>Recent<span>ly.</span></h2>
	
	<ul>
	 <li>

	    <div class="arkanoid item">
	     <h3><a href="http://www.schillmania.com/arkanoid/" title="The classic Breakout-style arcade game, playable in-browser">Arkanoid</a><span class="opt">:</span> <span>Recent Submissions</span></h3>
	     <div id="arkanoid-stub"><ul class="thumbs"><li id=""><a href="http://www.schillmania.com/arkanoid/#level17707"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/preview_003.png" alt="" /></a></li><li id=""><a href="http://www.schillmania.com/arkanoid/#level17708"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/preview_005.png" alt="" /></a></li><li id=""><a href="http://www.schillmania.com/arkanoid/#level17709"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/preview.png" alt="" /></a></li><li id=""><a href="http://www.schillmania.com/arkanoid/#level17710"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/preview_004.png" alt="" /></a></li><li id=""><a href="http://www.schillmania.com/arkanoid/#level17711"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/preview_006.png" alt="" /></a></li><li id=""><a href="http://www.schillmania.com/arkanoid/#level17712"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/preview_002.png" alt="" /></a></li><div class="clear"></div></ul></div>

	     <p class="cta"><a href="http://www.schillmania.com/arkanoid/#editor" title="Edit and submit your own DHTML Arkanoid level">Create a level</a> <span class="divider">|</span> <a href="http://www.schillmania.com/arkanoid/#browser" title="Browse and play user-submitted levels in DHTML Arkanoid">More..</a></p>
	    </div>

	    <div class="flickr item">
	     <h3>Amateur Photography <span class="opt">-</span> <span>Photos from Schill</span></h3>

	     <div id="flickr-stub"><ul class="thumbs"><li id=""><a href="http://www.flickr.com/photos/schill/6316980312/" title="RAWR"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/white-15.png" alt="" style="background: url(&quot;http://farm7.static.flickr.com/6056/6316980312_579f3b45e3_s.jpg&quot;) no-repeat scroll 50% 50% transparent;" /></a></li><li id=""><a href="http://www.flickr.com/photos/schill/6310998028/" title="Yahoo! Product Runway"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/white-15.png" alt="" style="background: url(&quot;http://farm7.static.flickr.com/6119/6310998028_4c781902e4_s.jpg&quot;) no-repeat scroll 50% 50% transparent;" /></a></li><li id=""><a href="http://www.flickr.com/photos/schill/6301280372/" title="Pew pew pew!"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/white-15.png" alt="" style="background: url(&quot;http://farm7.static.flickr.com/6093/6301280372_28d60eb41b_s.jpg&quot;) no-repeat scroll 50% 50% transparent;" /></a></li><li id=""><a href="http://www.flickr.com/photos/schill/6300659075/" title="10/29, North Beach"><img src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/white-15.png" alt="" style="background: url(&quot;http://farm7.static.flickr.com/6218/6300659075_5693c765a4_s.jpg&quot;) no-repeat scroll 50% 50% transparent;" /></a></li><div class="clear"></div></ul></div>
	    </div>

	    <div class="lastfm item">
	     <h3>Heavy Rotation <span class="opt">-</span> <span>Schill's most-listened-to artists @last.fm</span><span class="record"></span></h3>
	     <div id="lastfm-stub"><ul class="thumbs"><li class="top-artist" id=""><img xmlns="http://www.w3.org/1999/xhtml" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/none.gif" style="width: 48px; height: 48px; background: url(&quot;http://userserve-ak.last.fm/serve/64/4888680.jpg&quot;) no-repeat scroll 50% 50% transparent;" alt="" class="noisy" title="Beck" /><span xmlns="http://www.w3.org/1999/xhtml" class="playcount">774</span><span xmlns="http://www.w3.org/1999/xhtml" class="opt"> - </span><span xmlns="http://www.w3.org/1999/xhtml" class="artist">Beck</span></li><li class="top-artist" id=""><img xmlns="http://www.w3.org/1999/xhtml" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/none.gif" style="width: 48px; height: 48px; background: url(&quot;http://userserve-ak.last.fm/serve/64/40142925.png&quot;) no-repeat scroll 50% 50% transparent;" alt="" class="noisy" title="Cypress Hill" /><span xmlns="http://www.w3.org/1999/xhtml" class="playcount">490</span><span xmlns="http://www.w3.org/1999/xhtml" class="opt"> - </span><span xmlns="http://www.w3.org/1999/xhtml" class="artist">Cypress Hill</span></li><li class="top-artist" id=""><img xmlns="http://www.w3.org/1999/xhtml" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/none.gif" style="width: 48px; height: 48px; background: url(&quot;http://userserve-ak.last.fm/serve/64/225771.jpg&quot;) no-repeat scroll 50% 50% transparent;" alt="" class="noisy" title="Beastie Boys" /><span xmlns="http://www.w3.org/1999/xhtml" class="playcount">484</span><span xmlns="http://www.w3.org/1999/xhtml" class="opt"> - </span><span xmlns="http://www.w3.org/1999/xhtml" class="artist">Beastie Boys</span></li><li class="top-artist" id=""><img xmlns="http://www.w3.org/1999/xhtml" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/none.gif" style="width: 48px; height: 48px; background: url(&quot;http://userserve-ak.last.fm/serve/64/4870547.jpg&quot;) no-repeat scroll 50% 50% transparent;" alt="" class="noisy" title="Sublime" /><span xmlns="http://www.w3.org/1999/xhtml" class="playcount">440</span><span xmlns="http://www.w3.org/1999/xhtml" class="opt"> - </span><span xmlns="http://www.w3.org/1999/xhtml" class="artist">Sublime</span></li><li class="top-artist" id=""><img xmlns="http://www.w3.org/1999/xhtml" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/none.gif" style="width: 48px; height: 48px; background: url(&quot;http://userserve-ak.last.fm/serve/64/3017066.jpg&quot;) no-repeat scroll 50% 50% transparent;" alt="" class="noisy" title="The Herbaliser" /><span xmlns="http://www.w3.org/1999/xhtml" class="playcount">395</span><span xmlns="http://www.w3.org/1999/xhtml" class="opt"> - </span><span xmlns="http://www.w3.org/1999/xhtml" class="artist">The Herbaliser</span></li></ul></div>
	     <div class="clear"></div>
	    </div>
	
	 </li>
	</ul>

</li>

<li>
  <h2 title="The latest and greatest."><span class="l"></span>Read<span>ing.</span><span></span></h2>
  <ul>

   <li>
    <p>The latest and/or most relevant stuff.</p>
    <h3>Most Recently</h3>
    <dl>
	 <dt><a href="http://www.schillmania.com/content/entries/2011/wheels-of-steel/">The Wheels Of Steel: An Ode To Turntables (in HTML)</a><div class="r-wedge"></div></dt>
	 <dd>Building a browser-based turntable prototype using HTML, CSS, 
JavaScript and Flash: A bit of history, screenshots, explanation of the 
approach taken, limitations found and sample code.</dd>
	 <dt><a href="http://www.schillmania.com/content/entries/2010/how-soundmanager2-works/">How SoundManager 2 Works</a><div class="r-wedge"></div></dt>
	 <dd>Background details to the JavaScript and Flash that makes 
SoundManager 2 work, plus technical notes and other findings about 
Flash's wacky ExternalInterface functionality.</dd>
	 <dt><a href="http://www.schillmania.com/content/entries/2009/css3-and-the-future/">CSS 3 and The Future: Image-free Rounded Corners, Drop Shadows and Gradients</a><div class="r-wedge"></div></dt>
	 <dd>A brief history of rounded corner CSS 2 hacks and some examples of
 effects using border-radius, box-shadow and other fancy CSS 3 
attributes (and vendor-specific extensions) allowing modern browsers to 
render shiny UI designs entirely from code.</dd>
	 <dt><a href="http://www.schillmania.com/content/entries/2009/browser-performance-cost-of-social-media/">The Cost of "Social Media" Javascript Overload</a><div class="r-wedge"></div></dt>
	 <dd>Security, load time and user experience are all affected by the 
amount of inline Javascript blocks and third-party script "includes" 
being crammed into some modern sites, particularly commercial and tech 
blogs. This entry is a rant, and some suggestions to improve 
performance.</dd>
	 <dt><a href="http://www.schillmania.com/content/entries/2009/time-lapse-photography-chdk/">HD Time-Lapse Photography: A How-To</a><div class="r-wedge"></div></dt>
	 <dd>A hacker type can't simply plant basil and cilantro outside, and 
leave them alone to grow; of course there has to be something else, 
preferably nerdy, in the process. This is how I ended up getting into 
time-lapse photography and making videos from sequences of photos using a
 Canon camera, the free CHDK software, and QuickTime.</dd>
	 <dt><a href="http://www.schillmania.com/content/entries/2009/javascript-malware-obfuscation-analysis/">Javascript Malware Analysis: A Case Study</a><div class="r-wedge"></div></dt>
	 <dd>When JS goes bad: Remote iFrame tricks on legitimate (or phishing)
 sites can load Javascript exploits or "shellcode", which can mean 
drive-by downloads and other risks. This is an example of some 
heavily-obfuscated code seen on a recent Facebook phishing site.</dd>
	 <dt><a href="http://www.schillmania.com/content/projects/javascript-animation-3/">Javascript Animation: Tutorial, Part 3</a><div class="r-wedge"></div></dt>
	 <dd>The final, and overdue, part in a series on Javascript animation 
techniques: Creating tweens, simultaneous animations and event handling 
are discussed. A simple animation API, demo and source code is included.</dd>
	 <dt><a href="http://www.schillmania.com/content/entries/2009/adblock-vs-noscript/">Extension Wars: Adblock Plus vs. NoScript</a><div class="r-wedge"></div></dt>
	 <dd>Is it okay for one popular Firefox extension to alter the 
behaviour of another without asking for your permission? (PS: Internet 
drama/tempest in a teapot amusement goes here.)</dd>
	 <dt><a href="http://www.schillmania.com/content/entries/2009/defer-script-loading/">Optimizing Your External Javascript References</a><div class="r-wedge"></div></dt>
	 <dd>Traditionally, the script tag blocks parse, load and render of a 
web page. A few ideas around this include loading JS with JS, the defer 
attribute and caching locally.</dd>
	 <dt><a href="http://www.yuiblog.com/blog/2009/06/30/yui-soundmanager/">Enhancing YUI-based Applications With Audio</a><div class="r-wedge"></div></dt>
	 <dd>(yuiblog.com article) Thoughts about audio and how it can be applied online to user interface/experience design.</dd>
	 <dt><a href="http://www.yuiblog.com/blog/2009/02/26/flickr-uploadr/">Flickr Web Uploadr: File uploads via YUI</a><div class="r-wedge"></div></dt>
	 <dd>(code.flickr.com article) A brief history of how browser-based file uploads suck, and how we made them a lot better on Flickr.</dd>
	 <dt><a href="http://www.schillmania.com/content/entries/2009/yahoo-photos-frontend-thoughts/" class="xhr-exclude">A Snapshot of The Yahoo! Photos Beta (from 2006)</a><div class="r-wedge"></div></dt>
	 <dd>Javascript performance learnings: Memory leaks and management, 
event delegation, performance tweaks, debugging, UI observations and 
side thoughts from a web development perspective from my time working on
 the Ajax-heavy redesign of Yahoo! Photos, between 2005 and 2006.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2009/what-i-did-in-2008/" class="xhr-exclude">What I Did In 2008</a><div class="r-wedge"></div></dt>
     <dd>A productive year seeing the redesign of SoundManager 2, the 
Javascript Sound library, a refresh of Snowstorm (a free Javascript Snow
 effect), continued downtempo and trip-hop mixes, binaural audio 
recordings, time-lapse photography and video experiments.</dd>
	 <dt><a href="http://code.flickr.com/blog/2008/11/12/on-ui-quality-the-little-things-client-side-image-resizing/">On UI Quality (The Little Things)</a><div class="r-wedge"></div></dt>
	 <dd>(code.flickr.com article) Observations of how browsers do linear 
and bicubic image resampling when resizing, and how to make them look 
better in IE 6 and 7.</dd>
    </dl>
   </li>

  </ul>
 </li>
 
<li>
  <h2 title="Fun and entertainment"><span class="l"></span>Play<span>ing</span><span>.</span></h2>
  <ul>
   <li>
    <h3>Entertainment: Games</h3>
    <dl>
     <dt><a href="http://www.schillmania.com/content/projects/dhtml_arkanoid/">DHTML Arkanoid</a><div class="r-wedge"></div></dt>
     <dd>An attempt at recreating the classic Arkanoid arcade game entirely in DHTML. Includes a level editor and a highscores list.</dd>
     <dt><a href="http://www.schillmania.com/?theme=2007&amp;christmas=1">"Smash Christmas Lights"</a><div class="r-wedge"></div></dt>
     <dd>A seasonal twist on the 2007/08 web site theme, with animations
 and sound effects. There is a bonus sequence for those who are 
"thorough"..</dd>
     <dt><a href="http://www.schillmania.com/projects/fireworks/">Fireworks.js</a><div class="r-wedge"></div></dt>
     <dd>A goofy interactive Javascript Fireworks experiment, with animation and sound.</dd>
     <dt><a href="http://www.schillmania.com/random/humour/web20awareness/">"Web 2.0 Awareness Test"</a><div class="r-wedge"></div></dt>
     <dd>A Javascript/CSS experiment which gives you a score based on 
what Web 2.0-related sites you may have recently visited. (Written in 
2006.)</dd>

    </dl>
   </li>

   <li>
    <h3>Code: F/OSS/Things You Can Use</h3>
    <dl>
     <dt><a href="http://www.schillmania.com/projects/soundmanager2/">SoundManager 2: Javascript Sound For The Web</a><div class="r-wedge"></div></dt>
     <dd>A new, fancier version of a Javascript sound project allowing people to add sound, or make sound apps using Javascript.</dd>
     <dt class="external"><a href="http://www.schillmania.com/projects/soundmanager2/demo/play-mp3-links/">Javascript MP3 Player Demo</a><div class="r-wedge"></div></dt>
     <dd>An example of SoundManager 2, showing how you can make MP3 links play inline.</dd>
     <dt><a href="http://www.schillmania.com/content/projects/even-more-rounded-corners/">Even More Rounded Corners With CSS</a><div class="r-wedge"></div></dt>
     <dd>Another take at creating single-image, alpha-transparent, fluid, rounded corner dialogs with CSS.</dd>
     <dt><a href="http://www.schillmania.com/content/projects/javascript-animation-1/">Javascript Animation: Tutorial, Part 1</a><div class="r-wedge"></div></dt>
     <dd>Part one of a planned series: Theory behind Javascript/DHTML-based animation via setTimeout and setInterval.</dd>
     <dt><a href="http://www.schillmania.com/content/projects/javascript-animation-2/">Javascript Animation: Tutorial, Part 2</a><div class="r-wedge"></div></dt>
     <dd>Discussing efficiency regarding interval-based animation</dd>
	 <dt><a href="http://www.schillmania.com/content/projects/javascript-animation-3/">Javascript Animation: Tutorial, Part 3</a><div class="r-wedge"></div></dt>
	 <dd>The final, and overdue, part in a series on Javascript animation 
techniques: Creating tweens, simultaneous animations and event handling 
are discussed. A simple animation API, demo and source code is included.</dd>
     <dt><a href="http://www.schillmania.com/content/projects/snowstorm/">SnowStorm: A Javascript Snow Effect</a><div class="r-wedge"></div></dt>
     <dd>A downloadable DHTML component that creates an animated snowfall effect. Uses PNG-based images where supported.</dd>
    </dl>
   </li>

  </ul>
 </li>
 
<li>
  <h2 title="Thoughts and so on"><span class="l"></span>Think<span>ing</span><span>.</span></h2>
  <ul>
   <li>

    <p>Observations, Thoughts and Rants</p>
    <h3>Writing: Highlights</h3>

	<h4>Non-technical</h4>
    <dl>
     <dt><a href="http://www.schillmania.com/content/entries/2008/beck-mellow-gold/">Top 5 favourite albums: Beck: Mellow Gold</a><div class="r-wedge"></div></dt>
     <dd>Comments on Beck's classic break-out album from 1994, with a few insights from this Beck fan.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2005/04/12/what-turntables-to-buy/">What Turntables To Buy?</a><div class="r-wedge"></div></dt>
     <dd>My response to a forum post on choosing DJ equipment.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2004/01/03/on_djing_and_turntablism/">On DJing and Turntablism</a><div class="r-wedge"></div></dt>
     <dd>Why you should buy a pair of 1200s, a mixer and some records.</dd>
    </dl>

	<h4>Nerd glasses required</h4>
    <dl>
     <dt><a href="http://www.schillmania.com/content/projects/soundmanager2/">Sound For The Web: SoundManager 2 (Article)</a><div class="r-wedge"></div></dt>
     <dd>A new, fancier version of a Javascript sound project allowing people to add sound, or make sound apps using Javascript.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2006/08/how-web20-aware-are-you/">How Web 2.0-aware Are You?</a><div class="r-wedge"></div></dt>
     <dd>A humorous look at Web 2.0-related sites, using a trick that tests your browser's visited URL history.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2005/02/19/writing-html-like-1993/">Writing HTML like it's 1993</a><div class="r-wedge"></div></dt>
     <dd>A new job update, California, Eric and Molly teach CSS.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2005/10/dont-believe-the-web-20-hype/">Don't Believe The (Web 2.0) Hype!</a><div class="r-wedge"></div></dt>
     <dd>An attempt at popping the latest Internet 2.0 bubble and related technologies, along with a wishlist of ideals.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2005/10/on-seo-and-spamming/">On SEO and Search Engine Spamming</a><div class="r-wedge"></div></dt>
     <dd>From a post on theroot42.org originally entitled, 'SEO/How To Do Well On The Search Engines'</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/10/24/application-xhtml+xml/">Application/XHTML+XML</a><div class="r-wedge"></div></dt>
     <dd>What I learned about XHTML when switching schillmania.com to application/xhtml+xml (forcing true XML validation.)</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2004/06/27/the_obligatory_standards_rant/">The Obligatory Standards Rant</a><div class="r-wedge"></div></dt>
     <dd>A rant advocating standards on a respected design-oriented forum.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2004/01/01/spam_spam_spam/">Spam, spam, spam</a><div class="r-wedge"></div></dt>
     <dd>Spam: The scourge of the Internet. A quick overview-cum-rant, and some recommended tools to fight the spam war.</dd>
    </dl>

   </li>

  </ul>
 </li>

<li>
  <h2 title="Audio: Recordings"><span class="l"></span>Listen<span>ing</span><span>.</span></h2>
  <ul>
   <li>
    <p>Random soundbites + video clips</p>

    <h3>Binaural Audio Recordings</h3>
    <dl>
     <dt><a href="http://www.schillmania.com/content/media/beat-juggling/">Hand/Eye Coordination</a><div class="r-wedge"></div></dt>
     <dd>An attempt at 'Beat juggling' a seamless loop from a sample using turntables and two copies of the same record.</dd>
     <dt><a href="http://www.schillmania.com/content/media/drumming-with-vinyl/">Drumming with Vinyl</a><div class="r-wedge"></div></dt>
     <dd>Correctly scratch a record with a drum sample on it, and you can make your own variation on a theme.</dd>

     <dt><a href="http://www.schillmania.com/content/media/technics_mouse_scratching/">Scratching .. with a mouse?</a><div class="r-wedge"></div></dt>
     <dd>Combine a turntable with a computer mouse and a copy of the 
SoundCraft vinyl scratching emulation engine, and you have at least 30 
seconds of entertainment.</dd>
     <dt><a href="http://www.schillmania.com/content/media/2-hour_mix/">Chill with Schill</a><div class="r-wedge"></div></dt>
     <dd>A two-hour Downtempo/Trip-Hop mix, recorded on a lazy afternoon while drinking a $4 mocha from Starbucks. How's that for detail?</dd>
    </dl>
   </li>

  </ul>
 </li>

<li>
  <h2 title="Contact information and related links"><span class="l"></span>React<span>ing</span><span>.</span></h2>
  <ul>
   <li>
    <p>Get In Touch.</p>

    <h3>Interact</h3>
    <dl>
     <dt><a href="http://www.schillmania.com/content/react/contact/" title="Scott Schiller, contact information">Contact</a><div class="r-wedge"></div></dt>
     <dd>How to get in touch with Scott Schiller.</dd>
    </dl>

    <h3>Elsewhere Online</h3>
    <dl>
     <dt><a href="http://flickr.com/people/schill/">schill on Flickr</a><div class="r-wedge"></div></dt>
     <dd>Scott's Flickr profile and photos</dd>
     <dt><a href="http://www.last.fm/user/chillwithschill/">chillwithschill on Last.fm</a><div class="r-wedge"></div></dt>
     <dd>Scott's last.fm profile and music interests</dd>
     <dt><a href="http://www.scottschiller.com/" title="Scott Schiller, professional portfolio site">scottschiller.com: Portfolio</a><div class="r-wedge"></div></dt>
     <dd>Scott Schiller's professional and personal portfolio site. (Last updated: 2004)</dd>
     <dt><a href="http://www.freshly-ground.com/" title="Experimental design/music/DJ site">freshly ground: Experimental sound/music</a><div class="r-wedge"></div></dt>
     <dd>A side-project of experiments in music and binaural audio recordings</dd>
    </dl>

   </li>
  </ul>
</li>

<li>
  <h2 title="Old sites, articles and work"><span class="l"></span>Dig<span>ging</span><span>.</span></h2>
  <ul>
   <li>
    <p>The Archives: Design and content</p>

    <h3>Alternate Themes</h3>
    <dl>
     <dt><a href="http://schillmania.com/?theme=2008" title="2008 'Back to Basics' edition">2008 "Back To Basics" edition</a><div class="r-wedge"></div></dt>
     <dd>Schillmania! 2008 Edition: Back To Basics (CSS grid layout, minimal JS/images)</dd>
     <dt><a href="http://www.schillmania.com/?theme=2007" title="2007/2008 'night and day' theme">2007/08 "Night and Day" edition</a><div class="r-wedge"></div></dt>
     <dd>Schillmania! 2007/08 Edition: "Night and day" theme with time-sensitive UI/design, environmental sound effects and ambience</dd>
     <dt><a href="http://www.schillmania.com/?theme=2007&amp;christmas=1" title="2007 Smash Christmas Lights seasonal feature">"Smash Christmas Lights" 2007</a><div class="r-wedge"></div></dt>
     <dd>Schillmania! 2007 Edition: "Smash Christmas Lights" seasonal feature</dd>
     <dt><a href="http://www.schillmania.com/?theme=2006" title="Schillmania! 2006 Edition">2006 "Work/life balance" edition</a><div class="r-wedge"></div></dt>
     <dd>Schillmania! 2006 Edition: Archived design (Sliding feature photo, two-column layout)</dd>
     <dt><a href="http://www.schillmania.com/?theme=2005" title="Schillmania! 2005 Edition">2005 "Bouncing Icon" edition</a><div class="r-wedge"></div></dt>
     <dd>Schillmania! 2005 Edition: Archived design (Horizon, bouncing icon layout)</dd>
     <dt><a href="http://www.schillmania.com/?theme=2004" title="Schillmania! 2004 Edition">2004 Edition: Now With More Funk</a><div class="r-wedge"></div></dt>
     <dd>Schillmania! 2004 Edition: Archived design (Multi-themed sliding photos+sound layout, may be buggy)</dd>
    </dl>

    <h3>Design Archives</h3>
    <dl>
     <dt><a href="http://www.schillmania.com/content/entries/2005/05/25/5-years/">A Five-Year Retrospective</a><div class="r-wedge"></div></dt>
     <dd>A look back on the origins of schillmania.com and its previous incarnations.</dd>
     <dt><a href="http://www.schillmania.com/spring_03" title="Schillmania! Spring.03 Edition">2003 (Spring.03): Strictly XHTML edition</a><div class="r-wedge"></div></dt>
     <dd>Schillmania! 2003 Edition: Archived design ("Newspaper style", first major XHTML + heavy JavaScript rewrite)</dd>
    </dl>

	<h3>News + Article Archives</h3>
	
	<p>Everything else not previously mentioned.</p>

	<h4>2005 - 2007</h4>
    <dl>
     <dt><a href="http://www.schillmania.com/content/entries/2007/12/redesign/">A Fresh Redesign: 2007/08 edition</a><div class="r-wedge"></div></dt>
     <dd>An aggressive new time-sensitive redesign renders the site with different visual and audible cues over the course of the day.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2006/12/happy-holidays/">A Holiday Update (2006)</a><div class="r-wedge"></div></dt>
	 <dd>The usual holiday festivities: Snow, good tunes, smashing christmas lights and other debauchery.</dd>
     <dt><a href="http://www.schillmania.com/content/projects/soundmanager2/">Sound For The Web: SoundManager 2 (Article)</a><div class="r-wedge"></div></dt>
     <dd>A new, fancier version of a Javascript sound project allowing people to add sound, or make sound apps using Javascript.</dd>
     <dd>The usual holiday festivities: Snow, good tunes, smashing christmas lights and other debauchery.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2006/10/beck-hacks-yahoo/">Beck Hacks Yahoo!</a><div class="r-wedge"></div></dt>
     <dd>Beck Hansen and his band play an unannounced gig at Yahoo! Hack Day.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2006/08/how-web20-aware-are-you/">How Web 2.0-aware Are You?</a><div class="r-wedge"></div></dt>
     <dd>A humorous look at Web 2.0-related sites, using a trick that tests your browser's visited URL history.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2006/01/tj-schiller-us-open/">TJ Schiller Stomps US Open, X-Games</a><div class="r-wedge"></div></dt>
     <dd>My brother takes first place in two massive comps, throwing a never-done-before trick at one.</dd>
     <dt><a href="http://www.schillmania.com/content/media/world-of-trip-hop-mix/">World Of Trip-Hop Mix</a><div class="r-wedge"></div></dt>
     <dd>A 160-minute mix of downtempo and trip-hop.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2005/04/14/tj-schiller-2005-wsi/">TJ Schiller wins 2005 WSI Slopestyle</a><div class="r-wedge"></div></dt>
     <dd>My brother wins at a popular freestyle skiing event.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2005/04/03/okanagan-golf-paradise/">A Piece of Okanagan Golf Paradise</a><div class="r-wedge"></div></dt>
     <dd>A site built for a tourist vacation company at Predator Ridge.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2005/03/24/most-expensive-cab-ride-ever/">The Most Expensive Cab Ride. Ever.</a><div class="r-wedge"></div></dt>
     <dd>Regarding the purchase of a 2005 Toyota Celica.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2005/03/02/yahoo-10-sugar-ray/">Sugar Ray Rocks Yahoo! 10th Anniversary</a><div class="r-wedge"></div></dt>
     <dd>Yahoo celebrates 10 years with the musical talents of Sugar Ray.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2005/08/07/beck-in-santa-cruz/">Beck Live in Santa Cruz</a><div class="r-wedge"></div></dt>
     <dd>Meeting Beck Hansen, my favourite musician of all-time, after a concert in Santa Cruz</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2005/02/19/writing-html-like-1993/">Writing HTML like it's 1993</a><div class="r-wedge"></div></dt>
     <dd>A new job update, California, Eric and Molly teach CSS.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2005/10/dont-believe-the-web-20-hype/">Don't Believe The (Web 2.0) Hype!</a><div class="r-wedge"></div></dt>
     <dd>An attempt at popping the latest Internet 2.0 bubble and related technologies, along with a wishlist of ideals.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2005/10/on-seo-and-spamming/">On SEO and Search Engine Spamming</a><div class="r-wedge"></div></dt>
     <dd>From a post on theroot42.org originally entitled, 'SEO/How To Do Well On The Search Engines'</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2005/04/12/what-turntables-to-buy/">What Turntables To Buy?</a><div class="r-wedge"></div></dt>
     <dd>My response to a forum post on choosing DJ equipment.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2005/01/25/way-to-doh/">Way To D'oh!</a><div class="r-wedge"></div></dt>
     <dd>Some tech/geek thoughts on 'Way To Dough', a neat web-based promotion for the Subway chain of stores.</dd>
    </dl>

	<h4>2004</h4>
	<dl>
	 <dt><a href="http://www.schillmania.com/content/opinion/2004/11/27/the-$5-coffee/">The (almost) Five-Dollar Coffee</a><div class="r-wedge"></div></dt>
	 <dd>Starbucks ups the cost of already-overpriced coffee; I've had enough.</dd>
	 <dt><a href="http://www.schillmania.com/content/entries/2004/10/24/application-xhtml+xml/">Application/XHTML+XML</a><div class="r-wedge"></div></dt>
	 <dd>What I learned about XHTML when switching schillmania.com to application/xhtml+xml (forcing true XML validation.)</dd>
	 <dt><a href="http://www.schillmania.com/content/opinion/2004/06/27/the_obligatory_standards_rant/">The Obligatory Standards Rant</a><div class="r-wedge"></div></dt>
	 <dd>A rant advocating standards on a respected design-oriented forum.</dd>
	 <dt><a href="http://www.schillmania.com/content/opinion/2004/01/03/on_djing_and_turntablism/">On DJing and Turntablism</a><div class="r-wedge"></div></dt>
	 <dd>Why you should buy a pair of 1200s, a mixer and some records.</dd>
	 <dt><a href="http://www.schillmania.com/content/opinion/2004/01/01/spam_spam_spam/">Spam, spam, spam</a><div class="r-wedge"></div></dt>
	 <dd>Spam: The scourge of the Internet. A quick overview-cum-rant, and some recommended tools to fight the spam war.</dd>
     <dt><a href="http://www.schillmania.com/content/media/beat-juggling/">Hand/Eye Coordination</a><div class="r-wedge"></div></dt>
     <dd>An attempt at 'Beat juggling' a seamless loop from a sample using turntables and two copies of the same record.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/12/19/15-minutes-of-fame/">15 Minutes Of Fame</a><div class="r-wedge"></div></dt>
     <dd>The UK-based Magazine 'Web Designer,' writes some kind words about my work.</dd>
     <dt><a href="http://www.schillmania.com/content/projects/35mm-photo-viewer/">35mm Photo Viewer V5.0B</a><div class="r-wedge"></div></dt>
     <dd>A free, downloadable web-based photo viewer with optional XML templates.</dd>
     <dt><a href="http://www.schillmania.com/content/media/drumming-with-vinyl/">Drumming with Vinyl</a><div class="r-wedge"></div></dt>
     <dd>Correctly scratch a record with a drum sample on it, and you can make your own variation on a theme.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2004/11/27/the-$5-coffee/">The (almost) Five-Dollar Coffee</a><div class="r-wedge"></div></dt>
     <dd>Starbucks ups the cost of already-overpriced coffee; I've had enough.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/10/24/application-xhtml+xml/">Application/xhtml+xml</a><div class="r-wedge"></div></dt>
     <dd>What I learned about XHTML when switching schillmania.com to application/xhtml+xml (forcing true XML validation.)</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/10/17/tj-schiller_freshtival/">TJ Schiller at Freshtival 04</a><div class="r-wedge"></div></dt>
     <dd>My younger brother TJ does the skiing thing at Calgary's 
Freshtival, a freestyle skiing movie release event and rail session, 
with Tanner Hall and others.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/10/04/javascript-sound/">Javascript Sound API</a><div class="r-wedge"></div></dt>
     <dd>An API and flexible Flash template for adding sound to websites, controlled entirely by Javascript.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/09/19/a-real-world-website-counter/">A Real-World Website Counter</a><div class="r-wedge"></div></dt>
     <dd>A parallel-port-driven mileage-style counter is connected to schillmania.com. Meanwhile, rumors of geek-like antics abound.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/08/15/photo-viewer-update/">Photo Viewer Update: v4.0a</a><div class="r-wedge"></div></dt>
     <dd>A DHTML-driven photo viewer application is revamped with a basic search engine and other nifty features.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/08/15/when-lightning-strikes-next-door/">When Lightning Strikes - Next Door</a><div class="r-wedge"></div></dt>
     <dd>A nasty storm in Calgary hits the neighbours', damaging all sorts of electronic equipment.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/07/18/">Montreal, Quebec, Toronto, Windsor</a><div class="r-wedge"></div></dt>
     <dd>Photos and commentary on my vacation to Ontario and Quebec, which have some great summer weather - both sunny and stormy.</dd>
     <dt><a href="http://www.schillmania.com/content/opinion/2004/06/27/the_obligatory_standards_rant/">The Obligatory Standards Rant</a><div class="r-wedge"></div></dt>
     <dd>A rant advocating standards on a respected design-oriented forum.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/06/20/cm_town_hall/">Critical Mass: Town Hall 2004</a><div class="r-wedge"></div></dt>
     <dd>The annual Town Hall event at Critical Mass happens on-time, but with a presentational twist.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/06/13/">Scottschiller.com v4: Portfolio Site Update</a><div class="r-wedge"></div></dt>
     <dd>Scott Schiller finally gets around to updating his technical/work experience portfolio site - now at version 4.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/05/31/calgary_flames_17th_red_mile_photos/">Flames win Game 3, city loses its mind</a><div class="r-wedge"></div></dt>
     <dd>The Calgary Flames win Game 3 of the Stanley Cup finals, 
prompting a massive and energetic crowd along the ever-popular 17th 
Avenue area downtown.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/05/15/">DJing, beer, fire and .. rollerskating?</a><div class="r-wedge"></div></dt>
     <dd>Urban nightlife activities keep one Scott Schiller away from the computer.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/04/27/whistler_2004_wsi/">Josh Bibby, TJ Schiller stomp the WSI</a><div class="r-wedge"></div></dt>
     <dd>Two crazy freestyle skiiers from Vernon, BC turn heads at the 2004 Whistler Ski Invitational.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/04/12/">Okanagan Road Trip Photos</a><div class="r-wedge"></div></dt>
     <dd>Some new panoramic photos and other images from a trip to the Okanagan region of BC, Canada.</dd>
     <dt><a href="http://www.schillmania.com/content/media/technics_mouse_scratching/">Scratching .. with a mouse?</a><div class="r-wedge"></div></dt>
     <dd>Combine a turntable with a computer mouse and a copy of the 
SoundCraft vinyl scratching emulation engine, and you have at least 30 
seconds of entertainment.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/03/28/">Special Blend</a><div class="r-wedge"></div></dt>
     <dd>Vietnamese iced coffee, 'ca phe sua da' - an enjoyable caffeinated beverage.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/03/14/colophon/">Site Colophon</a><div class="r-wedge"></div></dt>
     <dd>A description of how the content for this site is generated and served.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/03/14/aquarium_time_lapse/">Aquarium Time Lapse Video</a><div class="r-wedge"></div></dt>
     <dd>A time-lapse video (~12 days) of a fish tank.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/03/01/">Back in Black</a><div class="r-wedge"></div></dt>
     <dd>An overview of the site redesign.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2004/02/29/tj_schiller-us_open/">TJ Schiller at the US Freeskiing Open</a><div class="r-wedge"></div></dt>
     <dd>TJ Schiller (my younger brother) wins the Slopestyle comp at the US Freeskiing open.</dd>
    </dl>
   </li>
   <li>
    <h4>2003</h4>
    <dl>
     <dt><a href="http://www.schillmania.com/content/entries/2003/12/18/">SnowStorm Update</a><div class="r-wedge"></div></dt>
     <dd>Changes and bug fixes relating to the DHTML SnowStorm component (Version 1.2a.)</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2003/12/06/">SnowStorm Component</a><div class="r-wedge"></div></dt>
     <dd>Continued description of SnowStorm, now a downloadable component-based javascript snow library.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2003/11/17/">Bring the SnowStorm (DHTML, that is..)</a><div class="r-wedge"></div></dt>
     <dd>An introduction to SnowStorm, a DHTML component that provides a
 neat animated snow effect; uses PNG-based images where supported.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2003/10/26/">More Fish Stuff</a><div class="r-wedge"></div></dt>
     <dd>Some small additions (and consequent losses) involving a 90-gallon fish tank.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2003/10/24/">Ugly Hallowe'en Theme</a><div class="r-wedge"></div></dt>
     <dd>The one time of the year where the Spring.03 'Bold' theme actually suits the season.</dd>
     <dt><a href="http://www.schillmania.com/content/entries/2003/10/09/">I Love Spam</a><div class="r-wedge"></div></dt>
     <dd>An experiment in spambots: 'How long until a new address is spammed?'</dd>
    </dl>
   </li>
 </ul>
</li>

</ul>
   
</div>

</div>

</div>

</div>

</div>

<script type="text/javascript">preInit();</script>

</div>

<div id="sm2-container" class="movieContainer" style="position: absolute; width: 1px; height: 1px; top: -999px; left: -999px;"><embed width="100%" height="100%" name="sm2movie" id="sm2movie" src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/soundmanager2_flash9.swf" quality="high" allowScriptAccess="always" bgcolor="#ffffff" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="" /></div><script src="The%20Wheels%20Of%20Steel_%20An%20Ode%20To%20Turntables%20%28in%20HTML%29_fichiers/domr.js"></script></body>
</html>